{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/lib/notion.ts"],"sourcesContent":["export class NotionService {\n  private apiKey: string | null = null;\n\n  initialize(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  private getHeaders() {\n    if (!this.apiKey) throw new Error('Notion API key not initialized');\n    return {\n      'Authorization': `Bearer ${this.apiKey}`,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  async getDatabases() {\n    const response = await fetch('/api/notion/databases', {\n      headers: this.getHeaders(),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.details || error.error || 'Failed to fetch databases');\n    }\n\n    return response.json();\n  }\n\n  async queryDatabase(databaseId: string) {\n    const response = await fetch(`/api/notion/databases/${databaseId}/query`, {\n      headers: this.getHeaders(),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to query database');\n    }\n\n    return response.json();\n  }\n\n  async getPage(pageId: string) {\n    const response = await fetch(`/api/notion/pages/${pageId}`, {\n      headers: this.getHeaders(),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch page');\n    }\n\n    return response.json();\n  }\n\n  async getBlocks(blockId: string) {\n    const response = await fetch(`/api/notion/blocks/${blockId}`, {\n      headers: this.getHeaders(),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch blocks');\n    }\n\n    return response.json();\n  }\n}\n\nexport const notionService = new NotionService();"],"names":[],"mappings":";;;;AAAO,MAAM;IACH,SAAwB,KAAK;IAErC,WAAW,MAAc,EAAE;QACzB,IAAI,CAAC,MAAM,GAAG;IAChB;IAEQ,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,OAAO;YACL,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;YACxC,gBAAgB;QAClB;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,WAAW,MAAM,MAAM,yBAAyB;YACpD,SAAS,IAAI,CAAC,UAAU;QAC1B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI,MAAM,KAAK,IAAI;QAClD;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,cAAc,UAAkB,EAAE;QACtC,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,WAAW,MAAM,CAAC,EAAE;YACxE,SAAS,IAAI,CAAC,UAAU;QAC1B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,QAAQ,MAAc,EAAE;QAC5B,MAAM,WAAW,MAAM,MAAM,CAAC,kBAAkB,EAAE,QAAQ,EAAE;YAC1D,SAAS,IAAI,CAAC,UAAU;QAC1B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,UAAU,OAAe,EAAE;QAC/B,MAAM,WAAW,MAAM,MAAM,CAAC,mBAAmB,EAAE,SAAS,EAAE;YAC5D,SAAS,IAAI,CAAC,UAAU;QAC1B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,MAAM,gBAAgB,IAAI","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/ApiKeyInput.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { KeyRound, Shield, ExternalLink, Eye, EyeOff } from 'lucide-react';\n\ninterface ApiKeyInputProps {\n  onSubmit: (apiKey: string, remember: boolean) => void;\n}\n\nexport default function ApiKeyInput({ onSubmit }: ApiKeyInputProps) {\n  const [apiKey, setApiKey] = useState('');\n  const [error, setError] = useState('');\n  const [showKey, setShowKey] = useState(false);\n  const [rememberMe, setRememberMe] = useState(true);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!apiKey.trim()) {\n      setError('Please enter an API key');\n      return;\n    }\n    // Notion API keys can start with different prefixes\n    if (!apiKey.startsWith('secret_') && !apiKey.startsWith('ntn_')) {\n      setError('Invalid API key format');\n      return;\n    }\n    onSubmit(apiKey.trim(), rememberMe);\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-8 bg-gradient-to-br from-indigo-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-900 dark:to-gray-900\">\n      <div className=\"card max-w-md w-full p-8 space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-2\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto shadow-lg\">\n            <KeyRound className=\"h-8 w-8 text-white\" />\n          </div>\n          <h1 className=\"text-2xl font-bold\">Connect to Notion</h1>\n          <p className=\"text-[var(--muted-foreground)]\">\n            Enter your Notion integration token to get started\n          </p>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <label htmlFor=\"api-key\" className=\"block text-sm font-medium\">\n              API Key\n            </label>\n            <div className=\"relative\">\n              <input\n                id=\"api-key\"\n                name=\"api-key\"\n                type={showKey ? 'text' : 'password'}\n                value={apiKey}\n                onChange={(e) => {\n                  setApiKey(e.target.value);\n                  setError('');\n                }}\n                className=\"w-full px-4 py-3 pr-12 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)] focus:border-transparent transition-all\"\n                placeholder=\"secret_...\"\n                autoComplete=\"off\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowKey(!showKey)}\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 p-1 hover:bg-[var(--muted)] rounded transition-colors\"\n              >\n                {showKey ? (\n                  <EyeOff className=\"h-5 w-5 text-[var(--muted-foreground)]\" />\n                ) : (\n                  <Eye className=\"h-5 w-5 text-[var(--muted-foreground)]\" />\n                )}\n              </button>\n            </div>\n            {error && (\n              <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n            )}\n          </div>\n\n          {/* Remember Me Checkbox */}\n          <label className=\"flex items-center gap-2 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(e.target.checked)}\n              className=\"checkbox-modern\"\n            />\n            <span className=\"text-sm font-medium\">Remember me</span>\n          </label>\n\n          <button\n            type=\"submit\"\n            className=\"button-primary w-full py-3 text-base\"\n          >\n            Connect to Notion\n          </button>\n        </form>\n\n        {/* Security Note */}\n        <div className=\"bg-[var(--muted)] rounded-lg p-4 space-y-2\">\n          <div className=\"flex items-center gap-2 text-sm font-medium\">\n            <Shield className=\"h-4 w-4 text-[var(--primary)]\" />\n            Security Note\n          </div>\n          <p className=\"text-sm text-[var(--muted-foreground)]\">\n            Your API key is only used to connect to your Notion workspace. \n            It's never stored on any server.\n          </p>\n        </div>\n\n        {/* Help Link */}\n        <div className=\"text-center\">\n          <a\n            href=\"https://www.notion.so/my-integrations\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center gap-2 text-sm text-[var(--primary)] hover:underline\"\n          >\n            Create a Notion integration\n            <ExternalLink className=\"h-3 w-3\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAHA;;;AASe,SAAS,YAAY,EAAE,QAAQ,EAAoB;;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,OAAO,IAAI,IAAI;YAClB,SAAS;YACT;QACF;QACA,oDAAoD;QACpD,IAAI,CAAC,OAAO,UAAU,CAAC,cAAc,CAAC,OAAO,UAAU,CAAC,SAAS;YAC/D,SAAS;YACT;QACF;QACA,SAAS,OAAO,IAAI,IAAI;IAC1B;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,iNAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAEtB,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAE,WAAU;sCAAiC;;;;;;;;;;;;8BAMhD,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAQ;oCAAU,WAAU;8CAA4B;;;;;;8CAG/D,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAM,UAAU,SAAS;4CACzB,OAAO;4CACP,UAAU,CAAC;gDACT,UAAU,EAAE,MAAM,CAAC,KAAK;gDACxB,SAAS;4CACX;4CACA,WAAU;4CACV,aAAY;4CACZ,cAAa;;;;;;sDAEf,6LAAC;4CACC,MAAK;4CACL,SAAS,IAAM,WAAW,CAAC;4CAC3B,WAAU;sDAET,wBACC,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;qEAElB,6LAAC,mMAAA,CAAA,MAAG;gDAAC,WAAU;;;;;;;;;;;;;;;;;gCAIpB,uBACC,6LAAC;oCAAE,WAAU;8CAA0C;;;;;;;;;;;;sCAK3D,6LAAC;4BAAM,WAAU;;8CACf,6LAAC;oCACC,MAAK;oCACL,SAAS;oCACT,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,OAAO;oCAC/C,WAAU;;;;;;8CAEZ,6LAAC;oCAAK,WAAU;8CAAsB;;;;;;;;;;;;sCAGxC,6LAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,yMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAkC;;;;;;;sCAGtD,6LAAC;4BAAE,WAAU;sCAAyC;;;;;;;;;;;;8BAOxD,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,MAAK;wBACL,QAAO;wBACP,KAAI;wBACJ,WAAU;;4BACX;0CAEC,6LAAC,yNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpC;GArHwB;KAAA","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/DatabaseSelector.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { notionService } from '@/lib/notion';\nimport { Database, Loader2, Calendar, Clock, ChevronRight, LogOut } from 'lucide-react';\n\ninterface DatabaseSelectorProps {\n  onSelect: (databaseId: string) => void;\n  onLogout: () => void;\n}\n\nexport default function DatabaseSelector({ onSelect, onLogout }: DatabaseSelectorProps) {\n  const [databases, setDatabases] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    loadDatabases();\n  }, []);\n\n  const loadDatabases = async () => {\n    try {\n      setLoading(true);\n      const results = await notionService.getDatabases();\n      setDatabases(results);\n    } catch (err: any) {\n      console.error('Database load error:', err);\n      setError(err.message || 'Failed to load databases. Please check your API key.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <Loader2 className=\"h-10 w-10 animate-spin text-[var(--primary)] mx-auto\" />\n          <p className=\"text-[var(--muted-foreground)]\">Loading your databases...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center p-8\">\n        <div className=\"card p-8 max-w-md w-full text-center space-y-4\">\n          <div className=\"w-16 h-16 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center mx-auto\">\n            <Database className=\"h-8 w-8 text-red-600 dark:text-red-400\" />\n          </div>\n          <h3 className=\"text-lg font-semibold\">Connection Error</h3>\n          <p className=\"text-sm text-[var(--muted-foreground)]\">{error}</p>\n          <button\n            onClick={loadDatabases}\n            className=\"button-primary px-6 py-2 mx-auto\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)]\">\n      {/* Header with Logout */}\n      <header className=\"border-b border-[var(--border)] bg-[var(--card)]\">\n        <div className=\"max-w-6xl mx-auto px-6 py-4 flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Database className=\"h-6 w-6 text-[var(--primary)]\" />\n            <span className=\"font-semibold text-lg\">Notion Viewer</span>\n          </div>\n          <button\n            onClick={onLogout}\n            className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n          >\n            <LogOut className=\"h-4 w-4\" />\n            Logout\n          </button>\n        </div>\n      </header>\n\n      <div className=\"max-w-6xl mx-auto px-6 py-12\">\n        {/* Header */}\n        <div className=\"text-center mb-12 space-y-4\">\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 dark:from-indigo-400 dark:to-purple-400 bg-clip-text text-transparent\">\n            Your Notion Databases\n          </h1>\n          <p className=\"text-lg text-[var(--muted-foreground)] max-w-2xl mx-auto\">\n            Select a database to explore its contents. All data is read-only with functional buttons preserved.\n          </p>\n        </div>\n\n        {databases.length === 0 ? (\n          <div className=\"card p-16 text-center space-y-4\">\n            <Database className=\"h-16 w-16 text-[var(--muted-foreground)] mx-auto\" />\n            <h3 className=\"text-xl font-semibold\">No Databases Found</h3>\n            <p className=\"text-[var(--muted-foreground)] max-w-md mx-auto\">\n              Make sure your Notion integration has access to at least one database. \n              You can share databases with your integration in Notion.\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {databases.map((db: any) => {\n              const icon = db.icon?.emoji || '📊';\n              const title = db.title[0]?.plain_text || 'Untitled Database';\n              const lastEdited = new Date(db.last_edited_time);\n              \n              return (\n                <button\n                  key={db.id}\n                  onClick={() => onSelect(db.id)}\n                  className=\"card card-hover p-6 text-left group\"\n                >\n                  <div className=\"space-y-4\">\n                    {/* Icon and Title */}\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <span className=\"text-3xl\">{icon}</span>\n                        <h3 className=\"text-lg font-semibold line-clamp-2 group-hover:text-[var(--primary)] transition-colors\">\n                          {title}\n                        </h3>\n                      </div>\n                      <ChevronRight className=\"w-5 h-5 text-[var(--muted-foreground)] group-hover:text-[var(--primary)] transition-all group-hover:translate-x-1\" />\n                    </div>\n                    \n                    {/* Metadata */}\n                    <div className=\"space-y-2 text-sm text-[var(--muted-foreground)]\">\n                      <div className=\"flex items-center gap-2\">\n                        <Calendar className=\"w-4 h-4\" />\n                        <span>Created {new Date(db.created_time).toLocaleDateString('en-US', {\n                          month: 'short',\n                          day: 'numeric',\n                          year: 'numeric'\n                        })}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>Updated {getRelativeTime(lastEdited)}</span>\n                      </div>\n                    </div>\n                    \n                    {/* Visual Indicator */}\n                    <div className=\"pt-2\">\n                      <div className=\"h-1 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\n                    </div>\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getRelativeTime(date: Date): string {\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  \n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  \n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/PropertyRenderer.tsx"],"sourcesContent":["'use client';\n\nimport { Calendar, Link2, Mail, Phone, User, FileText, ChevronDown, Hash, CheckSquare, Square } from 'lucide-react';\n\ninterface PropertyRendererProps {\n  property: any;\n}\n\n// Notion color mappings\nconst notionColors: Record<string, { bg: string; text: string }> = {\n  default: { bg: 'bg-gray-100 dark:bg-gray-800', text: 'text-gray-700 dark:text-gray-300' },\n  gray: { bg: 'bg-gray-100 dark:bg-gray-800', text: 'text-gray-700 dark:text-gray-300' },\n  brown: { bg: 'bg-amber-100 dark:bg-amber-900/30', text: 'text-amber-800 dark:text-amber-200' },\n  orange: { bg: 'bg-orange-100 dark:bg-orange-900/30', text: 'text-orange-800 dark:text-orange-200' },\n  yellow: { bg: 'bg-yellow-100 dark:bg-yellow-900/30', text: 'text-yellow-800 dark:text-yellow-200' },\n  green: { bg: 'bg-emerald-100 dark:bg-emerald-900/30', text: 'text-emerald-800 dark:text-emerald-200' },\n  blue: { bg: 'bg-blue-100 dark:bg-blue-900/30', text: 'text-blue-800 dark:text-blue-200' },\n  purple: { bg: 'bg-purple-100 dark:bg-purple-900/30', text: 'text-purple-800 dark:text-purple-200' },\n  pink: { bg: 'bg-pink-100 dark:bg-pink-900/30', text: 'text-pink-800 dark:text-pink-200' },\n  red: { bg: 'bg-red-100 dark:bg-red-900/30', text: 'text-red-800 dark:text-red-200' },\n};\n\nexport default function PropertyRenderer({ property }: PropertyRendererProps) {\n  if (!property) return null;\n\n  switch (property.type) {\n    case 'title':\n      return (\n        <span className=\"font-medium text-gray-900 dark:text-gray-100\">\n          {property.title[0]?.plain_text || ''}\n        </span>\n      );\n    \n    case 'rich_text':\n      return (\n        <span className=\"text-gray-700 dark:text-gray-300\">\n          {property.rich_text[0]?.plain_text || ''}\n        </span>\n      );\n    \n    case 'number':\n      return (\n        <div className=\"inline-flex items-center gap-1\">\n          <Hash className=\"h-3 w-3 text-gray-400\" />\n          <span className=\"font-mono text-sm\">{property.number?.toLocaleString() || '0'}</span>\n        </div>\n      );\n    \n    case 'select':\n      if (!property.select) return <span className=\"text-gray-400\">—</span>;\n      const selectColor = notionColors[property.select.color] || notionColors.default;\n      return (\n        <div className=\"inline-flex items-center\">\n          <span className={`inline-flex items-center gap-1.5 px-2 py-0.5 rounded-md text-xs font-medium ${selectColor.bg} ${selectColor.text}`}>\n            <span>{property.select.name}</span>\n            <ChevronDown className=\"h-3 w-3 opacity-50\" />\n          </span>\n        </div>\n      );\n    \n    case 'multi_select':\n      return (\n        <div className=\"inline-flex flex-wrap gap-1\">\n          {property.multi_select.map((option: any) => {\n            const color = notionColors[option.color] || notionColors.default;\n            return (\n              <span\n                key={option.id}\n                className={`inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium ${color.bg} ${color.text}`}\n              >\n                {option.name}\n              </span>\n            );\n          })}\n        </div>\n      );\n    \n    case 'date':\n      if (!property.date) return <span className=\"text-gray-400\">—</span>;\n      const date = new Date(property.date.start);\n      return (\n        <div className=\"inline-flex items-center gap-1.5 text-sm\">\n          <Calendar className=\"h-3.5 w-3.5 text-gray-400\" />\n          <span>{date.toLocaleDateString('en-US', { \n            month: 'short', \n            day: 'numeric', \n            year: 'numeric' \n          })}</span>\n        </div>\n      );\n    \n    case 'checkbox':\n      return (\n        <div className=\"flex items-center\">\n          {property.checkbox ? (\n            <CheckSquare className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n          ) : (\n            <Square className=\"h-4 w-4 text-gray-400\" />\n          )}\n        </div>\n      );\n    \n    case 'url':\n      if (!property.url) return <span className=\"text-gray-400\">—</span>;\n      return (\n        <a\n          href={property.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center gap-1 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:underline\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <Link2 className=\"h-3.5 w-3.5\" />\n          <span className=\"text-sm\">Link</span>\n        </a>\n      );\n    \n    case 'email':\n      if (!property.email) return <span className=\"text-gray-400\">—</span>;\n      return (\n        <a\n          href={`mailto:${property.email}`}\n          className=\"inline-flex items-center gap-1 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:underline\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <Mail className=\"h-3.5 w-3.5\" />\n          <span className=\"text-sm\">{property.email}</span>\n        </a>\n      );\n    \n    case 'phone_number':\n      if (!property.phone_number) return <span className=\"text-gray-400\">—</span>;\n      return (\n        <div className=\"inline-flex items-center gap-1 text-sm\">\n          <Phone className=\"h-3.5 w-3.5 text-gray-400\" />\n          <span>{property.phone_number}</span>\n        </div>\n      );\n    \n    case 'status':\n      if (!property.status) return <span className=\"text-gray-400\">—</span>;\n      const statusColor = notionColors[property.status.color] || notionColors.default;\n      return (\n        <span className={`inline-flex items-center px-2.5 py-1 rounded-md text-xs font-medium ${statusColor.bg} ${statusColor.text}`}>\n          <span className=\"w-1.5 h-1.5 rounded-full bg-current mr-1.5\" />\n          {property.status.name}\n        </span>\n      );\n    \n    case 'button':\n      return (\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            if (property.button?.url) {\n              window.open(property.button.url, '_blank');\n            }\n          }}\n          className=\"inline-flex items-center px-3 py-1.5 bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white text-sm font-medium rounded-md transition-colors shadow-sm hover:shadow\"\n        >\n          Click here\n        </button>\n      );\n    \n    case 'people':\n      return (\n        <div className=\"inline-flex items-center -space-x-2\">\n          {property.people.map((person: any) => (\n            <div\n              key={person.id}\n              className=\"inline-flex items-center justify-center w-7 h-7 rounded-full bg-gray-200 dark:bg-gray-700 ring-2 ring-white dark:ring-gray-800\"\n              title={person.name}\n            >\n              {person.avatar_url ? (\n                <img\n                  src={person.avatar_url}\n                  alt={person.name}\n                  className=\"w-full h-full rounded-full object-cover\"\n                />\n              ) : (\n                <User className=\"h-4 w-4 text-gray-600 dark:text-gray-400\" />\n              )}\n            </div>\n          ))}\n        </div>\n      );\n    \n    case 'files':\n      return (\n        <div className=\"inline-flex flex-wrap gap-1\">\n          {property.files.map((file: any, index: number) => (\n            <a\n              key={index}\n              href={file.external?.url || file.file?.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-xs hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <FileText className=\"h-3 w-3\" />\n              <span>{file.name || 'File'}</span>\n            </a>\n          ))}\n        </div>\n      );\n    \n    case 'created_time':\n      return (\n        <div className=\"inline-flex items-center gap-1.5 text-sm text-gray-500\">\n          <Calendar className=\"h-3.5 w-3.5\" />\n          <span>{new Date(property.created_time).toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</span>\n        </div>\n      );\n    \n    case 'created_by':\n      return (\n        <div className=\"inline-flex items-center gap-1.5 text-sm\">\n          <div className=\"w-5 h-5 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center\">\n            <User className=\"h-3 w-3 text-gray-600 dark:text-gray-400\" />\n          </div>\n          <span className=\"text-gray-700 dark:text-gray-300\">\n            {property.created_by.name || property.created_by.id}\n          </span>\n        </div>\n      );\n    \n    case 'last_edited_time':\n      return (\n        <div className=\"inline-flex items-center gap-1.5 text-sm text-gray-500\">\n          <Calendar className=\"h-3.5 w-3.5\" />\n          <span>{new Date(property.last_edited_time).toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</span>\n        </div>\n      );\n    \n    case 'last_edited_by':\n      return (\n        <div className=\"inline-flex items-center gap-1.5 text-sm\">\n          <div className=\"w-5 h-5 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center\">\n            <User className=\"h-3 w-3 text-gray-600 dark:text-gray-400\" />\n          </div>\n          <span className=\"text-gray-700 dark:text-gray-300\">\n            {property.last_edited_by.name || property.last_edited_by.id}\n          </span>\n        </div>\n      );\n    \n    default:\n      return (\n        <span className=\"text-gray-400 text-sm\">\n          {JSON.stringify(property).slice(0, 50)}...\n        </span>\n      );\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/FilterPanel.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { X, Plus, Trash2 } from 'lucide-react';\n\ninterface FilterConfig {\n  column: string;\n  type: string;\n  operator: string;\n  value: any;\n}\n\ninterface FilterPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  columns: string[];\n  items: any[];\n  filters: FilterConfig[];\n  onAddFilter: (filter: FilterConfig) => void;\n  onRemoveFilter: (index: number) => void;\n  onUpdateFilter: (index: number, filter: FilterConfig) => void;\n}\n\nconst operatorsByType: Record<string, { value: string; label: string }[]> = {\n  text: [\n    { value: 'contains', label: 'Contains' },\n    { value: 'does_not_contain', label: 'Does not contain' },\n    { value: 'is_empty', label: 'Is empty' },\n    { value: 'is_not_empty', label: 'Is not empty' },\n  ],\n  select: [\n    { value: 'equals', label: 'Is' },\n    { value: 'not_equals', label: 'Is not' },\n    { value: 'is_empty', label: 'Is empty' },\n    { value: 'is_not_empty', label: 'Is not empty' },\n  ],\n  checkbox: [\n    { value: 'equals', label: 'Is' },\n  ],\n  number: [\n    { value: 'equals', label: 'Equals' },\n    { value: 'greater_than', label: 'Greater than' },\n    { value: 'less_than', label: 'Less than' },\n    { value: 'is_empty', label: 'Is empty' },\n    { value: 'is_not_empty', label: 'Is not empty' },\n  ],\n  date: [\n    { value: 'equals', label: 'Is' },\n    { value: 'before', label: 'Before' },\n    { value: 'after', label: 'After' },\n    { value: 'is_empty', label: 'Is empty' },\n    { value: 'is_not_empty', label: 'Is not empty' },\n  ],\n};\n\nexport default function FilterPanel({\n  isOpen,\n  onClose,\n  columns,\n  items,\n  filters,\n  onAddFilter,\n  onRemoveFilter,\n  onUpdateFilter,\n}: FilterPanelProps) {\n  const [newFilter, setNewFilter] = useState<Partial<FilterConfig>>({});\n\n  const getPropertyType = (column: string): string => {\n    if (!items.length) return 'text';\n    const property = items[0].properties[column];\n    if (!property) return 'text';\n    \n    switch (property.type) {\n      case 'title':\n      case 'rich_text':\n        return 'text';\n      case 'select':\n      case 'status':\n        return 'select';\n      case 'checkbox':\n        return 'checkbox';\n      case 'number':\n        return 'number';\n      case 'date':\n      case 'created_time':\n      case 'last_edited_time':\n        return 'date';\n      default:\n        return 'text';\n    }\n  };\n\n  const getSelectOptions = (column: string): string[] => {\n    const options = new Set<string>();\n    items.forEach(item => {\n      const property = item.properties[column];\n      if (property?.type === 'select' && property.select) {\n        options.add(property.select.name);\n      }\n      if (property?.type === 'status' && property.status) {\n        options.add(property.status.name);\n      }\n    });\n    return Array.from(options).sort();\n  };\n\n  const handleAddFilter = () => {\n    if (newFilter.column && newFilter.operator) {\n      onAddFilter({\n        column: newFilter.column,\n        type: getPropertyType(newFilter.column),\n        operator: newFilter.operator,\n        value: newFilter.value || '',\n      } as FilterConfig);\n      setNewFilter({});\n    }\n  };\n\n  const needsValue = (operator: string): boolean => {\n    return !['is_empty', 'is_not_empty'].includes(operator);\n  };\n\n  return (\n    <>\n      <div className={`settings-panel ${isOpen ? 'open' : ''}`}>\n        <div className=\"settings-panel-header\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Filters</h3>\n            <button\n              onClick={onClose}\n              className=\"p-2 hover:bg-[var(--muted)] rounded-lg transition-colors\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n          <p className=\"text-sm text-[var(--muted-foreground)] mt-2\">\n            Filter items based on property values\n          </p>\n        </div>\n        \n        <div className=\"settings-panel-content\">\n          {/* Existing Filters */}\n          {filters.length > 0 && (\n            <div className=\"mb-6 space-y-2\">\n              <h4 className=\"text-sm font-medium mb-3\">Active Filters</h4>\n              {filters.map((filter, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-3 bg-[var(--muted)] rounded-lg\"\n                >\n                  <div className=\"flex-1 text-sm\">\n                    <span className=\"font-medium\">{filter.column}</span>\n                    <span className=\"mx-2 text-[var(--muted-foreground)]\">\n                      {operatorsByType[filter.type]?.find(op => op.value === filter.operator)?.label}\n                    </span>\n                    {needsValue(filter.operator) && (\n                      <span className=\"font-medium\">{filter.value}</span>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => onRemoveFilter(index)}\n                    className=\"p-1 hover:bg-[var(--border)] rounded transition-colors\"\n                  >\n                    <Trash2 className=\"h-4 w-4 text-red-500\" />\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Add New Filter */}\n          <div className=\"space-y-4\">\n            <h4 className=\"text-sm font-medium\">Add Filter</h4>\n            \n            {/* Column Selection */}\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Column</label>\n              <select\n                value={newFilter.column || ''}\n                onChange={(e) => {\n                  const column = e.target.value;\n                  setNewFilter({ column });\n                }}\n                className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n              >\n                <option value=\"\">Select a column</option>\n                {columns.map(col => (\n                  <option key={col} value={col}>{col}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* Operator Selection */}\n            {newFilter.column && (\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Condition</label>\n                <select\n                  value={newFilter.operator || ''}\n                  onChange={(e) => setNewFilter({ ...newFilter, operator: e.target.value })}\n                  className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                >\n                  <option value=\"\">Select condition</option>\n                  {operatorsByType[getPropertyType(newFilter.column)].map(op => (\n                    <option key={op.value} value={op.value}>{op.label}</option>\n                  ))}\n                </select>\n              </div>\n            )}\n\n            {/* Value Input */}\n            {newFilter.column && newFilter.operator && needsValue(newFilter.operator) && (\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Value</label>\n                {getPropertyType(newFilter.column) === 'select' ? (\n                  <select\n                    value={newFilter.value || ''}\n                    onChange={(e) => setNewFilter({ ...newFilter, value: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                  >\n                    <option value=\"\">Select value</option>\n                    {getSelectOptions(newFilter.column).map(option => (\n                      <option key={option} value={option}>{option}</option>\n                    ))}\n                  </select>\n                ) : getPropertyType(newFilter.column) === 'checkbox' ? (\n                  <select\n                    value={newFilter.value || ''}\n                    onChange={(e) => setNewFilter({ ...newFilter, value: e.target.value === 'true' })}\n                    className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                  >\n                    <option value=\"\">Select value</option>\n                    <option value=\"true\">Checked</option>\n                    <option value=\"false\">Unchecked</option>\n                  </select>\n                ) : getPropertyType(newFilter.column) === 'number' ? (\n                  <input\n                    type=\"number\"\n                    value={newFilter.value || ''}\n                    onChange={(e) => setNewFilter({ ...newFilter, value: parseFloat(e.target.value) })}\n                    className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                    placeholder=\"Enter number\"\n                  />\n                ) : getPropertyType(newFilter.column) === 'date' ? (\n                  <input\n                    type=\"date\"\n                    value={newFilter.value || ''}\n                    onChange={(e) => setNewFilter({ ...newFilter, value: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    value={newFilter.value || ''}\n                    onChange={(e) => setNewFilter({ ...newFilter, value: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-[var(--border)] rounded-lg bg-[var(--card)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]\"\n                    placeholder=\"Enter value\"\n                  />\n                )}\n              </div>\n            )}\n\n            {/* Add Button */}\n            <button\n              onClick={handleAddFilter}\n              disabled={!newFilter.column || !newFilter.operator}\n              className=\"button-primary w-full py-2 disabled:opacity-50 disabled:cursor-not-allowed inline-flex items-center justify-center gap-2\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              Add Filter\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/20 z-40\"\n          onClick={onClose}\n        />\n      )}\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/lib/sortUtils.ts"],"sourcesContent":["import { SortLevel, SortConfig, PropertyType } from '@/types/sort';\n\n// Natural sort comparator for handling numbers in strings properly\nexport function naturalCompare(a: string, b: string, caseSensitive: boolean = false): number {\n  const ax: any[] = [];\n  const bx: any[] = [];\n  \n  if (!caseSensitive) {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n  }\n  \n  a.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n    ax.push([$1 || Infinity, $2 || \"\"]);\n    return \"\";\n  });\n  \n  b.replace(/(\\d+)|(\\D+)/g, (_, $1, $2) => {\n    bx.push([$1 || Infinity, $2 || \"\"]);\n    return \"\";\n  });\n  \n  while (ax.length && bx.length) {\n    const an = ax.shift()!;\n    const bn = bx.shift()!;\n    const nn = (an[0] - bn[0]) || an[1].localeCompare(bn[1]);\n    if (nn) return nn;\n  }\n  \n  return ax.length - bx.length;\n}\n\n// Get text content from a property\nexport function getTextContent(property: any): string {\n  if (!property) return '';\n  \n  switch (property.type) {\n    case 'title':\n      return property.title?.[0]?.plain_text || '';\n    case 'rich_text':\n      return property.rich_text?.[0]?.plain_text || '';\n    case 'select':\n      return property.select?.name || '';\n    case 'status':\n      return property.status?.name || '';\n    case 'multi_select':\n      return property.multi_select?.map((s: any) => s.name).join(', ') || '';\n    case 'email':\n      return property.email || '';\n    case 'phone_number':\n      return property.phone_number || '';\n    case 'url':\n      return property.url || '';\n    case 'people':\n      return property.people?.map((p: any) => p.name || p.person?.email || '').join(', ') || '';\n    case 'created_by':\n      return property.created_by?.name || property.created_by?.person?.email || '';\n    case 'last_edited_by':\n      return property.last_edited_by?.name || property.last_edited_by?.person?.email || '';\n    default:\n      return '';\n  }\n}\n\n// Get numeric value from a property\nexport function getNumericValue(property: any): number | null {\n  if (!property) return null;\n  \n  switch (property.type) {\n    case 'number':\n      return property.number;\n    case 'checkbox':\n      return property.checkbox ? 1 : 0;\n    case 'multi_select':\n      return property.multi_select?.length || 0;\n    case 'people':\n      return property.people?.length || 0;\n    case 'files':\n      return property.files?.length || 0;\n    default:\n      return null;\n  }\n}\n\n// Get date value from a property\nexport function getDateValue(property: any): Date | null {\n  if (!property) return null;\n  \n  switch (property.type) {\n    case 'date':\n      return property.date?.start ? new Date(property.date.start) : null;\n    case 'created_time':\n      return new Date(property.created_time);\n    case 'last_edited_time':\n      return new Date(property.last_edited_time);\n    default:\n      return null;\n  }\n}\n\n// Apply date grouping for sorting\nexport function applyDateGrouping(date: Date | null, grouping: string): number {\n  if (!date) return 0;\n  \n  const now = new Date();\n  const dayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  \n  switch (grouping) {\n    case 'today':\n      return date >= dayStart ? 1 : 0;\n    case 'this_week':\n      const weekStart = new Date(dayStart);\n      weekStart.setDate(weekStart.getDate() - weekStart.getDay());\n      return date >= weekStart ? 1 : 0;\n    case 'this_month':\n      const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n      return date >= monthStart ? 1 : 0;\n    case 'day_of_week':\n      return date.getDay();\n    case 'time_only':\n      return date.getHours() * 60 + date.getMinutes();\n    default:\n      return date.getTime();\n  }\n}\n\n// Get computed value for sorting\nexport function getComputedValue(property: any, computedType: string): number {\n  const text = getTextContent(property);\n  \n  switch (computedType) {\n    case 'text_length':\n      return text.length;\n    case 'word_count':\n      return text.trim() ? text.trim().split(/\\s+/).length : 0;\n    case 'selection_count':\n      if (property?.type === 'multi_select') {\n        return property.multi_select?.length || 0;\n      }\n      return 0;\n    default:\n      return 0;\n  }\n}\n\n// Compare two values based on sort level configuration\nexport function compareValues(aVal: any, bVal: any, sortLevel: SortLevel, propertyType?: PropertyType): number {\n  // Handle null/empty values\n  const aIsEmpty = aVal === null || aVal === undefined || aVal === '';\n  const bIsEmpty = bVal === null || bVal === undefined || bVal === '';\n  \n  if (aIsEmpty && bIsEmpty) return 0;\n  \n  if (sortLevel.nullHandling === 'ignore') {\n    if (aIsEmpty && bIsEmpty) return 0;\n    if (aIsEmpty || bIsEmpty) return 0;\n  } else {\n    if (aIsEmpty) return sortLevel.nullHandling === 'first' ? -1 : 1;\n    if (bIsEmpty) return sortLevel.nullHandling === 'first' ? 1 : -1;\n  }\n  \n  let comparison = 0;\n  \n  // Apply computed values if specified\n  if (sortLevel.computedValue) {\n    aVal = getComputedValue(aVal, sortLevel.computedValue);\n    bVal = getComputedValue(bVal, sortLevel.computedValue);\n  }\n  \n  // Type-specific comparison\n  if (typeof aVal === 'string' && typeof bVal === 'string') {\n    // Handle custom order for select/status fields\n    if (sortLevel.customOrder && sortLevel.customOrder.length > 0) {\n      const aIndex = sortLevel.customOrder.indexOf(aVal);\n      const bIndex = sortLevel.customOrder.indexOf(bVal);\n      \n      if (aIndex !== -1 && bIndex !== -1) {\n        comparison = aIndex - bIndex;\n      } else if (aIndex !== -1) {\n        comparison = -1;\n      } else if (bIndex !== -1) {\n        comparison = 1;\n      } else {\n        // Fall back to natural comparison\n        comparison = sortLevel.naturalSort\n          ? naturalCompare(aVal, bVal, sortLevel.caseSensitive)\n          : sortLevel.caseSensitive\n            ? aVal.localeCompare(bVal)\n            : aVal.toLowerCase().localeCompare(bVal.toLowerCase());\n      }\n    } else {\n      // Regular string comparison\n      comparison = sortLevel.naturalSort\n        ? naturalCompare(aVal, bVal, sortLevel.caseSensitive)\n        : sortLevel.caseSensitive\n          ? aVal.localeCompare(bVal)\n          : aVal.toLowerCase().localeCompare(bVal.toLowerCase());\n    }\n  } else if (typeof aVal === 'number' && typeof bVal === 'number') {\n    // Number comparison with absolute value option\n    if (sortLevel.absoluteValue) {\n      comparison = Math.abs(aVal) - Math.abs(bVal);\n    } else {\n      comparison = aVal - bVal;\n    }\n  } else if (aVal instanceof Date && bVal instanceof Date) {\n    // Date comparison with grouping\n    if (sortLevel.dateGrouping && sortLevel.dateGrouping !== 'none') {\n      const aGrouped = applyDateGrouping(aVal, sortLevel.dateGrouping);\n      const bGrouped = applyDateGrouping(bVal, sortLevel.dateGrouping);\n      comparison = aGrouped - bGrouped;\n    } else {\n      comparison = aVal.getTime() - bVal.getTime();\n    }\n  } else {\n    // Fallback comparison\n    comparison = String(aVal).localeCompare(String(bVal));\n  }\n  \n  // Apply sort direction\n  return sortLevel.direction === 'asc' ? comparison : -comparison;\n}\n\n// Main sorting function\nexport function sortItems(items: any[], sortConfig: SortConfig): any[] {\n  if (!sortConfig.levels || sortConfig.levels.length === 0) {\n    return items;\n  }\n  \n  const enabledLevels = sortConfig.levels.filter(level => level.enabled);\n  if (enabledLevels.length === 0) {\n    return items;\n  }\n  \n  return [...items].sort((a, b) => {\n    for (const level of enabledLevels) {\n      const aProperty = a.properties[level.column];\n      const bProperty = b.properties[level.column];\n      \n      // Use the new getSortValue function for consistent value extraction\n      const aVal = getSortValue(aProperty, level);\n      const bVal = getSortValue(bProperty, level);\n      \n      const comparison = compareValues(aVal, bVal, level, aProperty?.type);\n      if (comparison !== 0) {\n        return comparison;\n      }\n    }\n    \n    return 0;\n  });\n}\n\n// Detect property type from items\nexport function detectPropertyType(items: any[], columnName: string): PropertyType | undefined {\n  for (const item of items) {\n    const property = item.properties[columnName];\n    if (property && property.type) {\n      return property.type as PropertyType;\n    }\n  }\n  return undefined;\n}\n\n// Get status options from items (preserves original order from Notion)\nexport function getStatusOptions(items: any[], columnName: string): string[] {\n  const statusOptionsMap = new Map<string, number>();\n  const statusOptionsWithColors = new Map<string, any>();\n  \n  // Collect all unique status values with their first occurrence index\n  items.forEach((item, index) => {\n    const property = item.properties[columnName];\n    if (property?.type === 'status' && property.status) {\n      const statusName = property.status.name;\n      if (!statusOptionsMap.has(statusName)) {\n        statusOptionsMap.set(statusName, index);\n        statusOptionsWithColors.set(statusName, property.status);\n      }\n    }\n  });\n  \n  // Sort by first occurrence to approximate original order\n  // In a real Notion database, statuses have a defined order\n  // This is our best approximation without access to database schema\n  return Array.from(statusOptionsMap.entries())\n    .sort((a, b) => a[1] - b[1])\n    .map(([name]) => name);\n}\n\n// Get select options from items (preserves order)\nexport function getSelectOptions(items: any[], columnName: string): string[] {\n  const selectOptionsMap = new Map<string, number>();\n  \n  items.forEach((item, index) => {\n    const property = item.properties[columnName];\n    if (property?.type === 'select' && property.select) {\n      const selectName = property.select.name;\n      if (!selectOptionsMap.has(selectName)) {\n        selectOptionsMap.set(selectName, index);\n      }\n    }\n  });\n  \n  return Array.from(selectOptionsMap.entries())\n    .sort((a, b) => a[1] - b[1])\n    .map(([name]) => name);\n}\n\n// Get formula value for sorting\nexport function getFormulaValue(property: any): any {\n  if (!property || property.type !== 'formula') return null;\n  \n  const formula = property.formula;\n  if (!formula) return null;\n  \n  switch (formula.type) {\n    case 'string':\n      return formula.string || '';\n    case 'number':\n      return formula.number;\n    case 'boolean':\n      return formula.boolean ? 1 : 0;\n    case 'date':\n      return formula.date?.start ? new Date(formula.date.start) : null;\n    default:\n      return null;\n  }\n}\n\n// Get rollup value for sorting\nexport function getRollupValue(property: any): any {\n  if (!property || property.type !== 'rollup') return null;\n  \n  const rollup = property.rollup;\n  if (!rollup) return null;\n  \n  switch (rollup.type) {\n    case 'number':\n      return rollup.number;\n    case 'date':\n      return rollup.date?.start ? new Date(rollup.date.start) : null;\n    case 'array':\n      // For array rollups, return count or first value\n      if (rollup.array && rollup.array.length > 0) {\n        const firstItem = rollup.array[0];\n        if (firstItem.type === 'number') return firstItem.number;\n        if (firstItem.type === 'date') return new Date(firstItem.date?.start || 0);\n        if (firstItem.type === 'string') return firstItem.string || '';\n      }\n      return rollup.array?.length || 0;\n    default:\n      return null;\n  }\n}\n\n// Get relation value for sorting (count of relations)\nexport function getRelationValue(property: any): number {\n  if (!property || property.type !== 'relation') return 0;\n  return property.relation?.length || 0;\n}\n\n// Enhanced sort value extraction based on property type\nexport function getSortValue(property: any, sortLevel: SortLevel): any {\n  if (!property) return null;\n  \n  // Apply computed values first if specified\n  if (sortLevel.computedValue) {\n    return getComputedValue(property, sortLevel.computedValue);\n  }\n  \n  // Extract value based on property type\n  switch (property.type) {\n    case 'title':\n    case 'rich_text':\n    case 'select':\n    case 'status':\n    case 'email':\n    case 'phone_number':\n    case 'url':\n    case 'people':\n    case 'created_by':\n    case 'last_edited_by':\n      return getTextContent(property);\n      \n    case 'number':\n    case 'checkbox':\n      return getNumericValue(property);\n      \n    case 'date':\n    case 'created_time':\n    case 'last_edited_time':\n      return getDateValue(property);\n      \n    case 'multi_select':\n      // For multi-select, we can sort by count or concatenated names\n      if (sortLevel.computedValue === 'selection_count') {\n        return property.multi_select?.length || 0;\n      }\n      return getTextContent(property);\n      \n    case 'files':\n      return property.files?.length || 0;\n      \n    case 'formula':\n      return getFormulaValue(property);\n      \n    case 'rollup':\n      return getRollupValue(property);\n      \n    case 'relation':\n      return getRelationValue(property);\n      \n    default:\n      return getTextContent(property);\n  }\n}\n\n// Get suggested sort options based on property type\nexport function getSuggestedSortOptions(propertyType: PropertyType, items?: any[], columnName?: string): Partial<SortLevel> {\n  switch (propertyType) {\n    case 'number':\n    case 'rollup':\n      return {\n        naturalSort: false,\n        absoluteValue: false,\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'date':\n    case 'created_time':\n    case 'last_edited_time':\n      return {\n        dateGrouping: 'none',\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'checkbox':\n      return {\n        direction: 'desc' as SortDirection, // True values first\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'status':\n      // For status fields, try to detect and use the predefined order\n      if (items && columnName) {\n        const statusOptions = getStatusOptions(items, columnName);\n        if (statusOptions.length > 0) {\n          return {\n            customOrder: statusOptions,\n            caseSensitive: false,\n            nullHandling: 'last' as NullHandling,\n          };\n        }\n      }\n      return {\n        customOrder: [],\n        caseSensitive: false,\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'select':\n      // For select fields, try to detect the order\n      if (items && columnName) {\n        const selectOptions = getSelectOptions(items, columnName);\n        if (selectOptions.length > 0) {\n          return {\n            customOrder: selectOptions,\n            caseSensitive: false,\n            nullHandling: 'last' as NullHandling,\n          };\n        }\n      }\n      return {\n        customOrder: [],\n        caseSensitive: false,\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'multi_select':\n      return {\n        computedValue: 'selection_count',\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'title':\n    case 'rich_text':\n      return {\n        naturalSort: true,\n        caseSensitive: false,\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'people':\n    case 'created_by':\n    case 'last_edited_by':\n      return {\n        caseSensitive: false,\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    case 'files':\n    case 'relation':\n      return {\n        direction: 'desc' as SortDirection, // More items first\n        nullHandling: 'last' as NullHandling,\n      };\n      \n    default:\n      return {\n        naturalSort: true,\n        caseSensitive: false,\n        nullHandling: 'last' as NullHandling,\n      };\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2404, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/SortPanel.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { X, ArrowUp, ArrowDown, Settings, Hash, Calendar, CheckSquare, Link, Users, Paperclip } from 'lucide-react';\nimport { SortConfig, SortLevel, PropertyType } from '@/types/sort';\nimport { getSuggestedSortOptions, getStatusOptions, getSelectOptions } from '@/lib/sortUtils';\n\ninterface SortPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  columns: Array<{\n    name: string;\n    type?: PropertyType;\n  }>;\n  items: any[];\n  currentSort: SortConfig;\n  onSort: (sortConfig: SortConfig) => void;\n}\n\nexport default function SortPanel({\n  isOpen,\n  onClose,\n  columns,\n  currentSort,\n  onSort,\n}: SortPanelProps) {\n  const [localSortConfig, setLocalSortConfig] = useState<SortConfig>(currentSort);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  useEffect(() => {\n    setLocalSortConfig(currentSort);\n  }, [currentSort]);\n\n  const handleQuickSort = (columnName: string, propertyType?: PropertyType) => {\n    const existingLevel = localSortConfig.levels.find(l => l.column === columnName && l.enabled);\n    \n    if (existingLevel) {\n      // Toggle direction\n      const newLevels = localSortConfig.levels.map(l => \n        l.column === columnName \n          ? { ...l, direction: l.direction === 'asc' ? 'desc' : 'asc' as 'asc' | 'desc' }\n          : l\n      );\n      const newConfig = { ...localSortConfig, levels: newLevels };\n      setLocalSortConfig(newConfig);\n      onSort(newConfig);\n    } else {\n      // Create new sort level with field-type-specific defaults\n      const suggestedOptions = propertyType ? getSuggestedSortOptions(propertyType, items, columnName) : {};\n      const newLevel: SortLevel = {\n        id: Date.now().toString(),\n        column: columnName,\n        direction: 'asc',\n        enabled: true,\n        nullHandling: 'last',\n        ...suggestedOptions\n      };\n      const newConfig = { ...localSortConfig, levels: [newLevel] };\n      setLocalSortConfig(newConfig);\n      onSort(newConfig);\n    }\n  };\n\n  const getPropertyIcon = (type?: PropertyType) => {\n    switch (type) {\n      case 'number':\n      case 'formula':\n      case 'rollup':\n        return <Hash className=\"h-3.5 w-3.5\" />;\n      case 'date':\n      case 'created_time':\n      case 'last_edited_time':\n        return <Calendar className=\"h-3.5 w-3.5\" />;\n      case 'checkbox':\n        return <CheckSquare className=\"h-3.5 w-3.5\" />;\n      case 'relation':\n        return <Link className=\"h-3.5 w-3.5\" />;\n      case 'people':\n      case 'created_by':\n      case 'last_edited_by':\n        return <Users className=\"h-3.5 w-3.5\" />;\n      case 'files':\n        return <Paperclip className=\"h-3.5 w-3.5\" />;\n      default:\n        return null;\n    }\n  };\n\n  const clearSort = () => {\n    const newConfig = { ...localSortConfig, levels: [] };\n    setLocalSortConfig(newConfig);\n    onSort(newConfig);\n  };\n\n  const getSortPreview = (column: { name: string; type?: PropertyType }, isAsc?: boolean, activeLevel?: SortLevel) => {\n    const type = column.type;\n    if (!type) return isAsc ? 'A → Z' : 'Z → A';\n    \n    // Check if this is a status/select with custom order\n    if ((type === 'status' || type === 'select') && activeLevel?.customOrder && activeLevel.customOrder.length > 0) {\n      const orderPreview = activeLevel.customOrder.slice(0, 2).join(' → ');\n      const suffix = activeLevel.customOrder.length > 2 ? '...' : '';\n      return isAsc ? `${orderPreview}${suffix}` : `← Custom`;\n    }\n    \n    switch (type) {\n      case 'number':\n      case 'rollup':\n      case 'formula':\n        return isAsc ? '1 → 9' : '9 → 1';\n      case 'date':\n      case 'created_time':\n      case 'last_edited_time':\n        return isAsc ? 'Old → New' : 'New → Old';\n      case 'checkbox':\n        return isAsc ? '☐ → ☑' : '☑ → ☐';\n      case 'status':\n        return isAsc ? 'Status order' : 'Status order ↓';\n      case 'select':\n        return isAsc ? 'Select order' : 'Select order ↓';\n      case 'multi_select':\n      case 'files':\n      case 'relation':\n        return isAsc ? 'Few → Many' : 'Many → Few';\n      default:\n        return isAsc ? 'A → Z' : 'Z → A';\n    }\n  };\n\n  return (\n    <>\n      <div className={`settings-panel ${isOpen ? 'open' : ''}`}>\n        <div className=\"settings-panel-header\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Sort</h3>\n            <button\n              onClick={onClose}\n              className=\"p-2 hover:bg-[var(--muted)] rounded-lg transition-colors\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n          <p className=\"text-sm text-[var(--muted-foreground)] mt-2\">\n            Sort items by column values\n          </p>\n        </div>\n        \n        <div className=\"settings-panel-content\">\n          {/* Current Sort */}\n          {localSortConfig.levels.filter(l => l.enabled).length > 0 && (\n            <div className=\"mb-6 p-4 bg-[var(--muted)] rounded-lg\">\n              <h4 className=\"text-sm font-medium mb-2\">Currently sorted by</h4>\n              {localSortConfig.levels\n                .filter(l => l.enabled)\n                .map((level, index) => (\n                  <div key={level.id} className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center gap-2\">\n                      {index > 0 && <span className=\"text-xs text-[var(--muted-foreground)]\">then by</span>}\n                      <span className=\"font-medium\">{level.column}</span>\n                      {level.direction === 'asc' ? (\n                        <ArrowUp className=\"h-4 w-4 text-[var(--primary)]\" />\n                      ) : (\n                        <ArrowDown className=\"h-4 w-4 text-[var(--primary)]\" />\n                      )}\n                      <span className=\"text-sm text-[var(--muted-foreground)]\">\n                        {level.direction === 'asc' ? 'Ascending' : 'Descending'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              <button\n                onClick={clearSort}\n                className=\"text-sm text-red-500 hover:text-red-600 mt-2\"\n              >\n                Clear all\n              </button>\n            </div>\n          )}\n\n          {/* Quick Sort Options */}\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium mb-3\">Quick sort</h4>\n            {columns.map(column => {\n              const activeLevel = localSortConfig.levels.find(l => l.column === column.name && l.enabled);\n              const isActive = !!activeLevel;\n              const isAsc = activeLevel?.direction === 'asc';\n              \n              return (\n                <button\n                  key={column.name}\n                  onClick={() => handleQuickSort(column.name, column.type)}\n                  className={`w-full text-left p-3 rounded-lg border transition-all ${\n                    isActive \n                      ? 'border-[var(--primary)] bg-[var(--primary)]/10' \n                      : 'border-[var(--border)] hover:border-[var(--primary)]/50'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      {getPropertyIcon(column.type)}\n                      <span className={`font-medium ${isActive ? 'text-[var(--primary)]' : ''}`}>\n                        {column.name}\n                      </span>\n                      {column.type && (\n                        <span className=\"text-xs text-[var(--muted-foreground)]\">\n                          {column.type.replace(/_/g, ' ')}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {isActive && (\n                        <span className=\"text-xs text-[var(--primary)]\">\n                          {getSortPreview(column, isAsc, activeLevel)}\n                        </span>\n                      )}\n                      {isActive ? (\n                        isAsc ? (\n                          <ArrowUp className=\"h-4 w-4 text-[var(--primary)]\" />\n                        ) : (\n                          <ArrowDown className=\"h-4 w-4 text-[var(--primary)]\" />\n                        )\n                      ) : (\n                        <ArrowUp className=\"h-4 w-4 opacity-30\" />\n                      )}\n                    </div>\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n\n          {/* Advanced Options */}\n          {localSortConfig.levels.filter(l => l.enabled).length > 0 && (\n            <div className=\"mt-8 pt-8 border-t border-[var(--border)]\">\n              <button\n                onClick={() => setShowAdvanced(!showAdvanced)}\n                className=\"flex items-center gap-2 text-sm font-medium text-[var(--muted-foreground)] hover:text-[var(--foreground)] transition-colors\"\n              >\n                <Settings className=\"h-4 w-4\" />\n                Advanced options\n                <ArrowDown className={`h-3 w-3 transition-transform ${showAdvanced ? 'rotate-180' : ''}`} />\n              </button>\n              \n              {showAdvanced && (\n                <div className=\"mt-4 space-y-4\">\n                  {localSortConfig.levels\n                    .filter(l => l.enabled)\n                    .map((level) => {\n                      const column = columns.find(c => c.name === level.column);\n                      const propertyType = column?.type;\n                      \n                      return (\n                        <div key={level.id} className=\"p-4 bg-[var(--muted)] rounded-lg\">\n                          <h5 className=\"text-sm font-medium mb-3 flex items-center gap-2\">\n                            {getPropertyIcon(propertyType)}\n                            {level.column}\n                          </h5>\n                          \n                          {/* Field-type-specific options */}\n                          {(propertyType === 'status' || propertyType === 'select') && (\n                            <div className=\"mb-4\">\n                              <label className=\"text-sm text-[var(--muted-foreground)] mb-2 block\">Custom order</label>\n                              <div className=\"space-y-2\">\n                                {(() => {\n                                  const options = propertyType === 'status' \n                                    ? getStatusOptions(items, level.column)\n                                    : getSelectOptions(items, level.column);\n                                  \n                                  if (options.length === 0) {\n                                    return (\n                                      <p className=\"text-xs text-[var(--muted-foreground)] italic\">\n                                        No {propertyType} values found\n                                      </p>\n                                    );\n                                  }\n                                  \n                                  // If customOrder is not set, use the detected order\n                                  const currentOrder = level.customOrder?.length > 0 \n                                    ? level.customOrder \n                                    : options;\n                                  \n                                  return (\n                                    <>\n                                      <p className=\"text-xs text-[var(--muted-foreground)] mb-2\">\n                                        Drag to reorder how {propertyType} values are sorted\n                                      </p>\n                                      <div className=\"bg-[var(--background)] p-2 rounded-md border border-[var(--border)] space-y-1\">\n                                        {currentOrder.map((option, index) => (\n                                          <div\n                                            key={option}\n                                            className=\"flex items-center gap-2 px-2 py-1 text-sm bg-[var(--card)] rounded border border-[var(--border)]\"\n                                          >\n                                            <span className=\"text-xs text-[var(--muted-foreground)] w-6\">{index + 1}.</span>\n                                            <span>{option}</span>\n                                          </div>\n                                        ))}\n                                      </div>\n                                      <button\n                                        onClick={() => {\n                                          // Reset to detected order\n                                          const newLevels = localSortConfig.levels.map(l =>\n                                            l.id === level.id ? { ...l, customOrder: options } : l\n                                          );\n                                          const newConfig = { ...localSortConfig, levels: newLevels };\n                                          setLocalSortConfig(newConfig);\n                                          onSort(newConfig);\n                                        }}\n                                        className=\"text-xs text-[var(--primary)] hover:underline\"\n                                      >\n                                        Reset to default order\n                                      </button>\n                                    </>\n                                  );\n                                })()}\n                              </div>\n                            </div>\n                          )}\n                          \n                          {(propertyType === 'title' || propertyType === 'rich_text') && (\n                            <div className=\"space-y-2\">\n                              <label className=\"flex items-center gap-2\">\n                                <input\n                                  type=\"checkbox\"\n                                  checked={level.naturalSort ?? true}\n                                  onChange={(e) => {\n                                    const newLevels = localSortConfig.levels.map(l =>\n                                      l.id === level.id ? { ...l, naturalSort: e.target.checked } : l\n                                    );\n                                    const newConfig = { ...localSortConfig, levels: newLevels };\n                                    setLocalSortConfig(newConfig);\n                                    onSort(newConfig);\n                                  }}\n                                  className=\"checkbox-modern\"\n                                />\n                                <span className=\"text-sm\">Natural sort (handles numbers in text)</span>\n                              </label>\n                              <label className=\"flex items-center gap-2\">\n                                <input\n                                  type=\"checkbox\"\n                                  checked={level.caseSensitive ?? false}\n                                  onChange={(e) => {\n                                    const newLevels = localSortConfig.levels.map(l =>\n                                      l.id === level.id ? { ...l, caseSensitive: e.target.checked } : l\n                                    );\n                                    const newConfig = { ...localSortConfig, levels: newLevels };\n                                    setLocalSortConfig(newConfig);\n                                    onSort(newConfig);\n                                  }}\n                                  className=\"checkbox-modern\"\n                                />\n                                <span className=\"text-sm\">Case sensitive</span>\n                              </label>\n                            </div>\n                          )}\n                          \n                          {propertyType === 'number' && (\n                            <label className=\"flex items-center gap-2\">\n                              <input\n                                type=\"checkbox\"\n                                checked={level.absoluteValue ?? false}\n                                onChange={(e) => {\n                                  const newLevels = localSortConfig.levels.map(l =>\n                                    l.id === level.id ? { ...l, absoluteValue: e.target.checked } : l\n                                  );\n                                  const newConfig = { ...localSortConfig, levels: newLevels };\n                                  setLocalSortConfig(newConfig);\n                                  onSort(newConfig);\n                                }}\n                                className=\"checkbox-modern\"\n                              />\n                              <span className=\"text-sm\">Sort by absolute value</span>\n                            </label>\n                          )}\n                          \n                          {(propertyType === 'date' || propertyType === 'created_time' || propertyType === 'last_edited_time') && (\n                            <div>\n                              <label className=\"text-sm text-[var(--muted-foreground)] mb-1\">Group by</label>\n                              <select\n                                value={level.dateGrouping || 'none'}\n                                onChange={(e) => {\n                                  const newLevels = localSortConfig.levels.map(l =>\n                                    l.id === level.id ? { ...l, dateGrouping: e.target.value as any } : l\n                                  );\n                                  const newConfig = { ...localSortConfig, levels: newLevels };\n                                  setLocalSortConfig(newConfig);\n                                  onSort(newConfig);\n                                }}\n                                className=\"w-full p-2 bg-[var(--background)] border border-[var(--border)] rounded-md text-sm\"\n                              >\n                                <option value=\"none\">No grouping</option>\n                                <option value=\"today\">Today/Not today</option>\n                                <option value=\"this_week\">This week/Not this week</option>\n                                <option value=\"this_month\">This month/Not this month</option>\n                                <option value=\"day_of_week\">Day of week</option>\n                                <option value=\"time_only\">Time only</option>\n                              </select>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/20 z-40\"\n          onClick={onClose}\n        />\n      )}\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3233, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/DatabaseView.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { notionService } from '@/lib/notion';\nimport { ArrowLeft, Loader2, Settings2, Eye, EyeOff, GripVertical, X, LogOut, Filter, ArrowUpDown, ArrowUp, ArrowDown, SortAsc } from 'lucide-react';\nimport PropertyRenderer from './PropertyRenderer';\nimport FilterPanel from './FilterPanel';\nimport SortPanel from './SortPanel';\nimport { sortItems, detectPropertyType, getSuggestedSortOptions } from '@/lib/sortUtils';\nimport { SortConfig as EnhancedSortConfig, SortLevel } from '@/types/sort';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n  horizontalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\ninterface DatabaseViewProps {\n  databaseId: string;\n  onPageSelect: (pageId: string) => void;\n  onBack: () => void;\n  onLogout: () => void;\n}\n\ninterface ColumnConfig {\n  name: string;\n  visible: boolean;\n  order: number;\n}\n\ninterface SimpleSortConfig {\n  column: string | null;\n  direction: 'asc' | 'desc';\n}\n\ninterface FilterConfig {\n  column: string;\n  type: string;\n  operator: string;\n  value: any;\n}\n\ninterface DatabasePreferences {\n  columns: ColumnConfig[];\n  sort: SimpleSortConfig;\n  enhancedSort?: EnhancedSortConfig;\n  filters: FilterConfig[];\n}\n\n// Sortable header component\nfunction SortableHeader({ \n  column, \n  children, \n  sortConfig,\n  onSort \n}: { \n  column: string; \n  children: React.ReactNode;\n  sortConfig: SimpleSortConfig;\n  onSort: (column: string) => void;\n}) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: column });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  const isSorted = sortConfig.column === column;\n  const isAsc = isSorted && sortConfig.direction === 'asc';\n\n  return (\n    <th\n      ref={setNodeRef}\n      style={style}\n      className=\"px-4 py-3 text-left text-xs font-semibold text-gray-700 dark:text-gray-300 uppercase tracking-wide sortable-header\"\n    >\n      <div className=\"flex items-center gap-2\">\n        <button\n          {...attributes}\n          {...listeners}\n          className=\"cursor-grab hover:text-[var(--primary)] transition-colors opacity-40 hover:opacity-100\"\n          title=\"Drag to reorder column\"\n        >\n          <GripVertical className=\"w-3.5 h-3.5\" />\n        </button>\n        <button\n          onClick={() => onSort(column)}\n          className=\"flex-1 flex items-center gap-1 hover:text-[var(--primary)] transition-colors group text-left\"\n          title={`Sort by ${column}`}\n        >\n          <span className=\"select-none\">{children}</span>\n          <span className=\"ml-auto\">\n            {isSorted ? (\n              isAsc ? (\n                <ArrowUp className=\"w-3.5 h-3.5 text-[var(--primary)]\" />\n              ) : (\n                <ArrowDown className=\"w-3.5 h-3.5 text-[var(--primary)]\" />\n              )\n            ) : (\n              <ArrowUpDown className=\"w-3.5 h-3.5 opacity-0 group-hover:opacity-40 transition-opacity\" />\n            )}\n          </span>\n        </button>\n      </div>\n    </th>\n  );\n}\n\nexport default function DatabaseView({ databaseId, onPageSelect, onBack, onLogout }: DatabaseViewProps) {\n  const [items, setItems] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showSettings, setShowSettings] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [showSort, setShowSort] = useState(false);\n  const [columnConfigs, setColumnConfigs] = useState<ColumnConfig[]>([]);\n  const [sortConfig, setSortConfig] = useState<SimpleSortConfig>({ column: null, direction: 'asc' });\n  const [enhancedSortConfig, setEnhancedSortConfig] = useState<EnhancedSortConfig>({ levels: [], presets: [] });\n  const [filters, setFilters] = useState<FilterConfig[]>([]);\n  \n  const PREFS_KEY = `notion_prefs_${databaseId}`;\n  \n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  useEffect(() => {\n    loadDatabaseItems();\n  }, [databaseId]);\n\n  const loadDatabaseItems = async () => {\n    try {\n      setLoading(true);\n      const results = await notionService.queryDatabase(databaseId);\n      setItems(results);\n      \n      // Initialize column configs\n      if (results.length > 0) {\n        const allColumns = Array.from(new Set(results.flatMap(item => Object.keys(item.properties))));\n        \n        // Check for saved preferences\n        const savedPrefs = localStorage.getItem(PREFS_KEY);\n        if (savedPrefs) {\n          try {\n            const prefs: DatabasePreferences = JSON.parse(savedPrefs);\n            \n            // Load column configs\n            const configMap = new Map(prefs.columns.map((p: ColumnConfig) => [p.name, p]));\n            const configs = allColumns.map((col, index) => {\n              const saved = configMap.get(col);\n              return saved || { name: col, visible: true, order: index + 1000 };\n            });\n            configs.sort((a, b) => a.order - b.order);\n            setColumnConfigs(configs);\n            \n            // Load sort config\n            if (prefs.sort) {\n              setSortConfig(prefs.sort);\n            }\n            \n            // Load enhanced sort config\n            if (prefs.enhancedSort) {\n              setEnhancedSortConfig(prefs.enhancedSort);\n            }\n            \n            // Load filters\n            if (prefs.filters) {\n              setFilters(prefs.filters);\n            }\n          } catch (e) {\n            // Fallback to default if parse fails\n            setColumnConfigs(allColumns.map((col, index) => ({\n              name: col,\n              visible: true,\n              order: index,\n            })));\n          }\n        } else {\n          setColumnConfigs(allColumns.map((col, index) => ({\n            name: col,\n            visible: true,\n            order: index,\n          })));\n        }\n      }\n    } catch (err) {\n      setError('Failed to load database items.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Save preferences whenever they change\n  useEffect(() => {\n    if (columnConfigs.length > 0) {\n      const prefs: DatabasePreferences = {\n        columns: columnConfigs,\n        sort: sortConfig,\n        enhancedSort: enhancedSortConfig,\n        filters: filters\n      };\n      localStorage.setItem(PREFS_KEY, JSON.stringify(prefs));\n    }\n  }, [columnConfigs, sortConfig, enhancedSortConfig, filters, PREFS_KEY]);\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n\n    if (active.id !== over?.id) {\n      setColumnConfigs((configs) => {\n        const oldIndex = configs.findIndex((c) => c.name === active.id);\n        const newIndex = configs.findIndex((c) => c.name === over?.id);\n        \n        return arrayMove(configs, oldIndex, newIndex).map((config, index) => ({\n          ...config,\n          order: index,\n        }));\n      });\n    }\n  };\n\n  const toggleColumnVisibility = (columnName: string) => {\n    setColumnConfigs(configs =>\n      configs.map(config =>\n        config.name === columnName\n          ? { ...config, visible: !config.visible }\n          : config\n      )\n    );\n  };\n\n  const handleSort = (column: string) => {\n    if (sortConfig.column === column) {\n      const newDirection = sortConfig.direction === 'asc' ? 'desc' : 'asc';\n      setSortConfig({\n        column,\n        direction: newDirection\n      });\n      \n      // Update enhanced sort config\n      const existingLevel = enhancedSortConfig.levels.find(l => l.column === column);\n      if (existingLevel) {\n        setEnhancedSortConfig({\n          ...enhancedSortConfig,\n          levels: enhancedSortConfig.levels.map(l => \n            l.column === column ? { ...l, direction: newDirection } : l\n          )\n        });\n      } else {\n        // Create a new sort level with field-type-specific defaults\n        const propertyType = detectPropertyType(items, column);\n        const newLevel: SortLevel = {\n          id: Date.now().toString(),\n          column,\n          direction: newDirection,\n          enabled: true,\n          nullHandling: 'last',\n          ...(propertyType && getSuggestedSortOptions(propertyType, items, column))\n        };\n        setEnhancedSortConfig({\n          ...enhancedSortConfig,\n          levels: [newLevel]\n        });\n      }\n    } else {\n      setSortConfig({ column, direction: 'asc' });\n      \n      // Create a new sort level with field-type-specific defaults\n      const propertyType = detectPropertyType(items, column);\n      const newLevel: SortLevel = {\n        id: Date.now().toString(),\n        column,\n        direction: 'asc',\n        enabled: true,\n        nullHandling: 'last',\n        ...(propertyType && getSuggestedSortOptions(propertyType, items, column))\n      };\n      setEnhancedSortConfig({\n        ...enhancedSortConfig,\n        levels: [newLevel]\n      });\n    }\n  };\n\n  const handleEnhancedSort = (newSortConfig: EnhancedSortConfig) => {\n    setEnhancedSortConfig(newSortConfig);\n    \n    // Update simple sort config based on the first enabled level\n    const firstEnabledLevel = newSortConfig.levels.find(l => l.enabled);\n    if (firstEnabledLevel) {\n      setSortConfig({\n        column: firstEnabledLevel.column,\n        direction: firstEnabledLevel.direction\n      });\n    } else {\n      setSortConfig({ column: null, direction: 'asc' });\n    }\n  };\n\n  const addFilter = (filter: FilterConfig) => {\n    setFilters([...filters, filter]);\n  };\n\n  const removeFilter = (index: number) => {\n    setFilters(filters.filter((_, i) => i !== index));\n  };\n\n  const updateFilter = (index: number, filter: FilterConfig) => {\n    setFilters(filters.map((f, i) => i === index ? filter : f));\n  };\n\n  // Apply sorting and filtering to items\n  const processedItems = (() => {\n    let result = [...items];\n\n    // Apply filters\n    filters.forEach(filter => {\n      result = result.filter(item => {\n        const property = item.properties[filter.column];\n        if (!property) return false;\n\n        switch (filter.operator) {\n          case 'contains':\n            if (property.type === 'title' || property.type === 'rich_text') {\n              const text = property[property.type]?.[0]?.plain_text || '';\n              return text.toLowerCase().includes(filter.value.toLowerCase());\n            }\n            return false;\n          \n          case 'does_not_contain':\n            if (property.type === 'title' || property.type === 'rich_text') {\n              const text = property[property.type]?.[0]?.plain_text || '';\n              return !text.toLowerCase().includes(filter.value.toLowerCase());\n            }\n            return false;\n          \n          case 'equals':\n            if (property.type === 'select' || property.type === 'status') {\n              return property[property.type]?.name === filter.value;\n            }\n            if (property.type === 'checkbox') {\n              return property.checkbox === filter.value;\n            }\n            if (property.type === 'number') {\n              return property.number === filter.value;\n            }\n            return false;\n          \n          case 'not_equals':\n            if (property.type === 'select' || property.type === 'status') {\n              return property[property.type]?.name !== filter.value;\n            }\n            return false;\n          \n          case 'greater_than':\n            if (property.type === 'number') {\n              return (property.number || 0) > filter.value;\n            }\n            return false;\n          \n          case 'less_than':\n            if (property.type === 'number') {\n              return (property.number || 0) < filter.value;\n            }\n            return false;\n          \n          case 'before':\n            if (property.type === 'date') {\n              const date = new Date(property.date?.start || 0);\n              const filterDate = new Date(filter.value);\n              return date < filterDate;\n            }\n            return false;\n          \n          case 'after':\n            if (property.type === 'date') {\n              const date = new Date(property.date?.start || 0);\n              const filterDate = new Date(filter.value);\n              return date > filterDate;\n            }\n            return false;\n          \n          case 'is_empty':\n            if (property.type === 'title' || property.type === 'rich_text') {\n              return !property[property.type] || property[property.type].length === 0 || !property[property.type][0]?.plain_text;\n            }\n            if (property.type === 'select' || property.type === 'status') {\n              return !property[property.type];\n            }\n            if (property.type === 'number') {\n              return property.number === null || property.number === undefined;\n            }\n            if (property.type === 'date') {\n              return !property.date;\n            }\n            return false;\n          \n          case 'is_not_empty':\n            if (property.type === 'title' || property.type === 'rich_text') {\n              return property[property.type] && property[property.type].length > 0 && property[property.type][0]?.plain_text;\n            }\n            if (property.type === 'select' || property.type === 'status') {\n              return !!property[property.type];\n            }\n            if (property.type === 'number') {\n              return property.number !== null && property.number !== undefined;\n            }\n            if (property.type === 'date') {\n              return !!property.date;\n            }\n            return false;\n          \n          default:\n            return true;\n        }\n      });\n    });\n\n    // Apply sorting using the enhanced sort system\n    if (enhancedSortConfig.levels.length > 0) {\n      result = sortItems(result, enhancedSortConfig);\n    }\n\n    return result;\n  })();\n\n  const visibleColumns = columnConfigs\n    .filter(config => config.visible)\n    .sort((a, b) => a.order - b.order);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-indigo-600\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)]\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-40 bg-[var(--card)] border-b border-[var(--border)] backdrop-blur-sm bg-opacity-95\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={onBack}\n                className=\"inline-flex items-center gap-2 text-sm text-[var(--muted-foreground)] hover:text-[var(--foreground)] transition-colors\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back\n              </button>\n              <div className=\"h-4 w-px bg-[var(--border)]\" />\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-[var(--muted-foreground)]\">Showing</span>\n                <span className=\"text-sm font-medium\">{processedItems.length} of {items.length}</span>\n                {filters.length > 0 && (\n                  <span className=\"text-xs px-2 py-0.5 bg-[var(--primary)] text-white rounded-full\">\n                    {filters.length} filter{filters.length > 1 ? 's' : ''}\n                  </span>\n                )}\n                {sortConfig.column && (\n                  <span className=\"text-xs px-2 py-0.5 bg-blue-500 text-white rounded-full\">\n                    Sorted by {sortConfig.column}\n                  </span>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => setShowSort(!showSort)}\n                className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n              >\n                <SortAsc className=\"h-4 w-4\" />\n                Sort\n              </button>\n              <button\n                onClick={() => setShowFilters(!showFilters)}\n                className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n              >\n                <Filter className=\"h-4 w-4\" />\n                Filter\n              </button>\n              <button\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n              >\n                <Settings2 className=\"h-4 w-4\" />\n                Customize\n              </button>\n              <button\n                onClick={onLogout}\n                className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n              >\n                <LogOut className=\"h-4 w-4\" />\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"p-6\">\n        {items.length === 0 ? (\n          <div className=\"card p-12 text-center\">\n            <p className=\"text-[var(--muted-foreground)]\">\n              No items found in this database.\n            </p>\n          </div>\n        ) : (\n          <div className=\"card overflow-hidden shadow-sm\">\n            <div className=\"overflow-x-auto\">\n              <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleDragEnd}\n              >\n                <table className=\"table-modern\">\n                  <thead>\n                    <SortableContext\n                      items={visibleColumns.map(col => col.name)}\n                      strategy={horizontalListSortingStrategy}\n                    >\n                      <tr>\n                        {visibleColumns.map((column) => (\n                          <SortableHeader \n                            key={column.name} \n                            column={column.name}\n                            sortConfig={sortConfig}\n                            onSort={handleSort}\n                          >\n                            {column.name}\n                          </SortableHeader>\n                        ))}\n                      </tr>\n                    </SortableContext>\n                  </thead>\n                  <tbody>\n                    {processedItems.map((item) => {\n                      // Check if this row has any non-empty values\n                      const hasContent = visibleColumns.some(col => {\n                        const prop = item.properties[col.name];\n                        if (!prop) return false;\n                        if (prop.type === 'title' && prop.title?.[0]?.plain_text) return true;\n                        if (prop.type === 'rich_text' && prop.rich_text?.[0]?.plain_text) return true;\n                        if (prop.type === 'number' && prop.number !== null) return true;\n                        if (prop.type === 'select' && prop.select) return true;\n                        if (prop.type === 'multi_select' && prop.multi_select?.length > 0) return true;\n                        if (prop.type === 'checkbox') return true;\n                        if (prop.type === 'date' && prop.date) return true;\n                        if (prop.type === 'url' && prop.url) return true;\n                        if (prop.type === 'email' && prop.email) return true;\n                        if (prop.type === 'phone_number' && prop.phone_number) return true;\n                        if (prop.type === 'people' && prop.people?.length > 0) return true;\n                        if (prop.type === 'files' && prop.files?.length > 0) return true;\n                        if (prop.type === 'status' && prop.status) return true;\n                        if (prop.type === 'button') return true;\n                        return false;\n                      });\n\n                      return (\n                        <tr\n                          key={item.id}\n                          onClick={() => onPageSelect(item.id)}\n                          className={`group cursor-pointer transition-all ${!hasContent ? 'opacity-50' : ''}`}\n                        >\n                          {visibleColumns.map((column) => {\n                            const property = item.properties[column.name];\n                            const isEmpty = !property || (\n                              property.type === 'title' && !property.title?.[0]?.plain_text &&\n                              property.type === 'rich_text' && !property.rich_text?.[0]?.plain_text\n                            );\n                            \n                            return (\n                              <td\n                                key={column.name}\n                                className=\"px-4 py-3\"\n                              >\n                                <div className=\"table-cell-wrap\">\n                                  {property ? (\n                                    <PropertyRenderer property={property} />\n                                  ) : (\n                                    <span className=\"text-gray-300 dark:text-gray-700 select-none\">—</span>\n                                  )}\n                                </div>\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </DndContext>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {/* Settings Panel */}\n      <div className={`settings-panel ${showSettings ? 'open' : ''}`}>\n        <div className=\"settings-panel-header\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Customize Columns</h3>\n            <button\n              onClick={() => setShowSettings(false)}\n              className=\"p-2 hover:bg-[var(--muted)] rounded-lg transition-colors\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n          <p className=\"text-sm text-[var(--muted-foreground)] mt-2\">\n            Toggle visibility and drag to reorder\n          </p>\n        </div>\n        \n        <div className=\"settings-panel-content\">\n          <DndContext\n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragEnd={handleDragEnd}\n          >\n            <SortableContext\n              items={columnConfigs.sort((a, b) => a.order - b.order).map(col => col.name)}\n              strategy={verticalListSortingStrategy}\n            >\n              <div className=\"space-y-1\">\n                {columnConfigs\n                  .sort((a, b) => a.order - b.order)\n                  .map((column) => (\n                    <ColumnItem\n                      key={column.name}\n                      column={column}\n                      onToggle={() => toggleColumnVisibility(column.name)}\n                    />\n                  ))}\n              </div>\n            </SortableContext>\n          </DndContext>\n        </div>\n      </div>\n\n      {/* Overlay */}\n      {showSettings && (\n        <div\n          className=\"fixed inset-0 bg-black/20 z-40\"\n          onClick={() => setShowSettings(false)}\n        />\n      )}\n\n      {/* Filter Panel */}\n      <FilterPanel\n        isOpen={showFilters}\n        onClose={() => setShowFilters(false)}\n        columns={columnConfigs.map(c => c.name)}\n        items={items}\n        filters={filters}\n        onAddFilter={addFilter}\n        onRemoveFilter={removeFilter}\n        onUpdateFilter={updateFilter}\n      />\n\n      {/* Sort Panel */}\n      <SortPanel\n        isOpen={showSort}\n        onClose={() => setShowSort(false)}\n        columns={visibleColumns.map(c => ({\n          name: c.name,\n          type: detectPropertyType(items, c.name)\n        }))}\n        items={items}\n        currentSort={enhancedSortConfig}\n        onSort={handleEnhancedSort}\n      />\n    </div>\n  );\n}\n\nfunction ColumnItem({ column, onToggle }: { column: ColumnConfig; onToggle: () => void }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: column.name });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className=\"flex items-center gap-3 p-3 rounded-lg hover:bg-[var(--muted)] transition-colors\"\n    >\n      <button\n        {...attributes}\n        {...listeners}\n        className=\"cursor-grab hover:text-[var(--primary)]\"\n      >\n        <GripVertical className=\"w-4 h-4\" />\n      </button>\n      \n      <label className=\"flex items-center gap-3 flex-1 cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          checked={column.visible}\n          onChange={onToggle}\n          className=\"checkbox-modern\"\n        />\n        <span className=\"text-sm font-medium\">{column.name}</span>\n      </label>\n      \n      {column.visible ? (\n        <Eye className=\"w-4 h-4 text-[var(--muted-foreground)]\" />\n      ) : (\n        <EyeOff className=\"w-4 h-4 text-[var(--muted-foreground)]\" />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AASA;AAQA;;;AA3BA;;;;;;;;;;;;AA6DA,4BAA4B;AAC5B,SAAS,eAAe,EACtB,MAAM,EACN,QAAQ,EACR,UAAU,EACV,MAAM,EAMP;;IACC,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACX,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EAAE;QAAE,IAAI;IAAO;IAE7B,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;QACA,SAAS,aAAa,MAAM;IAC9B;IAEA,MAAM,WAAW,WAAW,MAAM,KAAK;IACvC,MAAM,QAAQ,YAAY,WAAW,SAAS,KAAK;IAEnD,qBACE,6LAAC;QACC,KAAK;QACL,OAAO;QACP,WAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACE,GAAG,UAAU;oBACb,GAAG,SAAS;oBACb,WAAU;oBACV,OAAM;8BAEN,cAAA,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;;;;;;8BAE1B,6LAAC;oBACC,SAAS,IAAM,OAAO;oBACtB,WAAU;oBACV,OAAO,CAAC,QAAQ,EAAE,QAAQ;;sCAE1B,6LAAC;4BAAK,WAAU;sCAAe;;;;;;sCAC/B,6LAAC;4BAAK,WAAU;sCACb,WACC,sBACE,6LAAC,+MAAA,CAAA,UAAO;gCAAC,WAAU;;;;;qDAEnB,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;qDAGvB,6LAAC,2NAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrC;GAjES;;QAkBH,sKAAA,CAAA,cAAW;;;KAlBR;AAmEM,SAAS,aAAa,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAqB;;IACpG,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;QAAE,QAAQ;QAAM,WAAW;IAAM;IAChG,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;QAAE,QAAQ,EAAE;QAAE,SAAS,EAAE;IAAC;IAC3G,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAEzD,MAAM,YAAY,CAAC,aAAa,EAAE,YAAY;IAE9C,MAAM,UAAU,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EACvB,CAAA,GAAA,8JAAA,CAAA,YAAS,AAAD,EAAE,8JAAA,CAAA,gBAAa,GACvB,CAAA,GAAA,8JAAA,CAAA,YAAS,AAAD,EAAE,8JAAA,CAAA,iBAAc,EAAE;QACxB,kBAAkB,sKAAA,CAAA,8BAA2B;IAC/C;IAGF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG;QAAC;KAAW;IAEf,MAAM,oBAAoB;QACxB,IAAI;YACF,WAAW;YACX,MAAM,UAAU,MAAM,gHAAA,CAAA,gBAAa,CAAC,aAAa,CAAC;YAClD,SAAS;YAET,4BAA4B;YAC5B,IAAI,QAAQ,MAAM,GAAG,GAAG;gBACtB,MAAM,aAAa,MAAM,IAAI,CAAC,IAAI,IAAI,QAAQ,OAAO,CAAC,CAAA,OAAQ,OAAO,IAAI,CAAC,KAAK,UAAU;gBAEzF,8BAA8B;gBAC9B,MAAM,aAAa,aAAa,OAAO,CAAC;gBACxC,IAAI,YAAY;oBACd,IAAI;wBACF,MAAM,QAA6B,KAAK,KAAK,CAAC;wBAE9C,sBAAsB;wBACtB,MAAM,YAAY,IAAI,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAoB;gCAAC,EAAE,IAAI;gCAAE;6BAAE;wBAC5E,MAAM,UAAU,WAAW,GAAG,CAAC,CAAC,KAAK;4BACnC,MAAM,QAAQ,UAAU,GAAG,CAAC;4BAC5B,OAAO,SAAS;gCAAE,MAAM;gCAAK,SAAS;gCAAM,OAAO,QAAQ;4BAAK;wBAClE;wBACA,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;wBACxC,iBAAiB;wBAEjB,mBAAmB;wBACnB,IAAI,MAAM,IAAI,EAAE;4BACd,cAAc,MAAM,IAAI;wBAC1B;wBAEA,4BAA4B;wBAC5B,IAAI,MAAM,YAAY,EAAE;4BACtB,sBAAsB,MAAM,YAAY;wBAC1C;wBAEA,eAAe;wBACf,IAAI,MAAM,OAAO,EAAE;4BACjB,WAAW,MAAM,OAAO;wBAC1B;oBACF,EAAE,OAAO,GAAG;wBACV,qCAAqC;wBACrC,iBAAiB,WAAW,GAAG,CAAC,CAAC,KAAK,QAAU,CAAC;gCAC/C,MAAM;gCACN,SAAS;gCACT,OAAO;4BACT,CAAC;oBACH;gBACF,OAAO;oBACL,iBAAiB,WAAW,GAAG,CAAC,CAAC,KAAK,QAAU,CAAC;4BAC/C,MAAM;4BACN,SAAS;4BACT,OAAO;wBACT,CAAC;gBACH;YACF;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,WAAW;QACb;IACF;IAEA,wCAAwC;IACxC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,cAAc,MAAM,GAAG,GAAG;gBAC5B,MAAM,QAA6B;oBACjC,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,SAAS;gBACX;gBACA,aAAa,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC;YACjD;QACF;iCAAG;QAAC;QAAe;QAAY;QAAoB;QAAS;KAAU;IAEtE,MAAM,gBAAgB,CAAC;QACrB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG;QAEzB,IAAI,OAAO,EAAE,KAAK,MAAM,IAAI;YAC1B,iBAAiB,CAAC;gBAChB,MAAM,WAAW,QAAQ,SAAS,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,OAAO,EAAE;gBAC9D,MAAM,WAAW,QAAQ,SAAS,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,MAAM;gBAE3D,OAAO,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS,UAAU,UAAU,GAAG,CAAC,CAAC,QAAQ,QAAU,CAAC;wBACpE,GAAG,MAAM;wBACT,OAAO;oBACT,CAAC;YACH;QACF;IACF;IAEA,MAAM,yBAAyB,CAAC;QAC9B,iBAAiB,CAAA,UACf,QAAQ,GAAG,CAAC,CAAA,SACV,OAAO,IAAI,KAAK,aACZ;oBAAE,GAAG,MAAM;oBAAE,SAAS,CAAC,OAAO,OAAO;gBAAC,IACtC;IAGV;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,WAAW,MAAM,KAAK,QAAQ;YAChC,MAAM,eAAe,WAAW,SAAS,KAAK,QAAQ,SAAS;YAC/D,cAAc;gBACZ;gBACA,WAAW;YACb;YAEA,8BAA8B;YAC9B,MAAM,gBAAgB,mBAAmB,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK;YACvE,IAAI,eAAe;gBACjB,sBAAsB;oBACpB,GAAG,kBAAkB;oBACrB,QAAQ,mBAAmB,MAAM,CAAC,GAAG,CAAC,CAAA,IACpC,EAAE,MAAM,KAAK,SAAS;4BAAE,GAAG,CAAC;4BAAE,WAAW;wBAAa,IAAI;gBAE9D;YACF,OAAO;gBACL,4DAA4D;gBAC5D,MAAM,eAAe,CAAA,GAAA,mHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;gBAC/C,MAAM,WAAsB;oBAC1B,IAAI,KAAK,GAAG,GAAG,QAAQ;oBACvB;oBACA,WAAW;oBACX,SAAS;oBACT,cAAc;oBACd,GAAI,gBAAgB,CAAA,GAAA,mHAAA,CAAA,0BAAuB,AAAD,EAAE,cAAc,OAAO,OAAO;gBAC1E;gBACA,sBAAsB;oBACpB,GAAG,kBAAkB;oBACrB,QAAQ;wBAAC;qBAAS;gBACpB;YACF;QACF,OAAO;YACL,cAAc;gBAAE;gBAAQ,WAAW;YAAM;YAEzC,4DAA4D;YAC5D,MAAM,eAAe,CAAA,GAAA,mHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC/C,MAAM,WAAsB;gBAC1B,IAAI,KAAK,GAAG,GAAG,QAAQ;gBACvB;gBACA,WAAW;gBACX,SAAS;gBACT,cAAc;gBACd,GAAI,gBAAgB,CAAA,GAAA,mHAAA,CAAA,0BAAuB,AAAD,EAAE,cAAc,OAAO,OAAO;YAC1E;YACA,sBAAsB;gBACpB,GAAG,kBAAkB;gBACrB,QAAQ;oBAAC;iBAAS;YACpB;QACF;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,sBAAsB;QAEtB,6DAA6D;QAC7D,MAAM,oBAAoB,cAAc,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO;QAClE,IAAI,mBAAmB;YACrB,cAAc;gBACZ,QAAQ,kBAAkB,MAAM;gBAChC,WAAW,kBAAkB,SAAS;YACxC;QACF,OAAO;YACL,cAAc;gBAAE,QAAQ;gBAAM,WAAW;YAAM;QACjD;IACF;IAEA,MAAM,YAAY,CAAC;QACjB,WAAW;eAAI;YAAS;SAAO;IACjC;IAEA,MAAM,eAAe,CAAC;QACpB,WAAW,QAAQ,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IAC5C;IAEA,MAAM,eAAe,CAAC,OAAe;QACnC,WAAW,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAM,MAAM,QAAQ,SAAS;IAC1D;IAEA,uCAAuC;IACvC,MAAM,iBAAiB,CAAC;QACtB,IAAI,SAAS;eAAI;SAAM;QAEvB,gBAAgB;QAChB,QAAQ,OAAO,CAAC,CAAA;YACd,SAAS,OAAO,MAAM,CAAC,CAAA;gBACrB,MAAM,WAAW,KAAK,UAAU,CAAC,OAAO,MAAM,CAAC;gBAC/C,IAAI,CAAC,UAAU,OAAO;gBAEtB,OAAQ,OAAO,QAAQ;oBACrB,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,WAAW,SAAS,IAAI,KAAK,aAAa;4BAC9D,MAAM,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc;4BACzD,OAAO,KAAK,WAAW,GAAG,QAAQ,CAAC,OAAO,KAAK,CAAC,WAAW;wBAC7D;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,WAAW,SAAS,IAAI,KAAK,aAAa;4BAC9D,MAAM,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc;4BACzD,OAAO,CAAC,KAAK,WAAW,GAAG,QAAQ,CAAC,OAAO,KAAK,CAAC,WAAW;wBAC9D;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,YAAY,SAAS,IAAI,KAAK,UAAU;4BAC5D,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAE,SAAS,OAAO,KAAK;wBACvD;wBACA,IAAI,SAAS,IAAI,KAAK,YAAY;4BAChC,OAAO,SAAS,QAAQ,KAAK,OAAO,KAAK;wBAC3C;wBACA,IAAI,SAAS,IAAI,KAAK,UAAU;4BAC9B,OAAO,SAAS,MAAM,KAAK,OAAO,KAAK;wBACzC;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,YAAY,SAAS,IAAI,KAAK,UAAU;4BAC5D,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAE,SAAS,OAAO,KAAK;wBACvD;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,UAAU;4BAC9B,OAAO,CAAC,SAAS,MAAM,IAAI,CAAC,IAAI,OAAO,KAAK;wBAC9C;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,UAAU;4BAC9B,OAAO,CAAC,SAAS,MAAM,IAAI,CAAC,IAAI,OAAO,KAAK;wBAC9C;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,QAAQ;4BAC5B,MAAM,OAAO,IAAI,KAAK,SAAS,IAAI,EAAE,SAAS;4BAC9C,MAAM,aAAa,IAAI,KAAK,OAAO,KAAK;4BACxC,OAAO,OAAO;wBAChB;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,QAAQ;4BAC5B,MAAM,OAAO,IAAI,KAAK,SAAS,IAAI,EAAE,SAAS;4BAC9C,MAAM,aAAa,IAAI,KAAK,OAAO,KAAK;4BACxC,OAAO,OAAO;wBAChB;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,WAAW,SAAS,IAAI,KAAK,aAAa;4BAC9D,OAAO,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE;wBAC1G;wBACA,IAAI,SAAS,IAAI,KAAK,YAAY,SAAS,IAAI,KAAK,UAAU;4BAC5D,OAAO,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC;wBACjC;wBACA,IAAI,SAAS,IAAI,KAAK,UAAU;4BAC9B,OAAO,SAAS,MAAM,KAAK,QAAQ,SAAS,MAAM,KAAK;wBACzD;wBACA,IAAI,SAAS,IAAI,KAAK,QAAQ;4BAC5B,OAAO,CAAC,SAAS,IAAI;wBACvB;wBACA,OAAO;oBAET,KAAK;wBACH,IAAI,SAAS,IAAI,KAAK,WAAW,SAAS,IAAI,KAAK,aAAa;4BAC9D,OAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,GAAG,KAAK,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE;wBACtG;wBACA,IAAI,SAAS,IAAI,KAAK,YAAY,SAAS,IAAI,KAAK,UAAU;4BAC5D,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC;wBAClC;wBACA,IAAI,SAAS,IAAI,KAAK,UAAU;4BAC9B,OAAO,SAAS,MAAM,KAAK,QAAQ,SAAS,MAAM,KAAK;wBACzD;wBACA,IAAI,SAAS,IAAI,KAAK,QAAQ;4BAC5B,OAAO,CAAC,CAAC,SAAS,IAAI;wBACxB;wBACA,OAAO;oBAET;wBACE,OAAO;gBACX;YACF;QACF;QAEA,+CAA+C;QAC/C,IAAI,mBAAmB,MAAM,CAAC,MAAM,GAAG,GAAG;YACxC,SAAS,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;QAC7B;QAEA,OAAO;IACT,CAAC;IAED,MAAM,iBAAiB,cACpB,MAAM,CAAC,CAAA,SAAU,OAAO,OAAO,EAC/B,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAEnC,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,oNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;IAGzB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAAkC;;;;;;;;;;;;;;;;IAIvD;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS;wCACT,WAAU;;0DAEV,6LAAC,mNAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGnC,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DAAyC;;;;;;0DACzD,6LAAC;gDAAK,WAAU;;oDAAuB,eAAe,MAAM;oDAAC;oDAAK,MAAM,MAAM;;;;;;;4CAC7E,QAAQ,MAAM,GAAG,mBAChB,6LAAC;gDAAK,WAAU;;oDACb,QAAQ,MAAM;oDAAC;oDAAQ,QAAQ,MAAM,GAAG,IAAI,MAAM;;;;;;;4CAGtD,WAAW,MAAM,kBAChB,6LAAC;gDAAK,WAAU;;oDAA0D;oDAC7D,WAAW,MAAM;;;;;;;;;;;;;;;;;;;0CAMpC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,YAAY,CAAC;wCAC5B,WAAU;;0DAEV,6LAAC,iOAAA,CAAA,UAAO;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGjC,6LAAC;wCACC,SAAS,IAAM,eAAe,CAAC;wCAC/B,WAAU;;0DAEV,6LAAC,yMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGhC,6LAAC;wCACC,SAAS,IAAM,gBAAgB,CAAC;wCAChC,WAAU;;0DAEV,6LAAC,mNAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGnC,6LAAC;wCACC,SAAS;wCACT,WAAU;;0DAEV,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASxC,6LAAC;gBAAK,WAAU;0BACb,MAAM,MAAM,KAAK,kBAChB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;yCAKhD,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,8JAAA,CAAA,aAAU;4BACT,SAAS;4BACT,oBAAoB,8JAAA,CAAA,gBAAa;4BACjC,WAAW;sCAEX,cAAA,6LAAC;gCAAM,WAAU;;kDACf,6LAAC;kDACC,cAAA,6LAAC,sKAAA,CAAA,kBAAe;4CACd,OAAO,eAAe,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;4CACzC,UAAU,sKAAA,CAAA,gCAA6B;sDAEvC,cAAA,6LAAC;0DACE,eAAe,GAAG,CAAC,CAAC,uBACnB,6LAAC;wDAEC,QAAQ,OAAO,IAAI;wDACnB,YAAY;wDACZ,QAAQ;kEAEP,OAAO,IAAI;uDALP,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;kDAW1B,6LAAC;kDACE,eAAe,GAAG,CAAC,CAAC;4CACnB,6CAA6C;4CAC7C,MAAM,aAAa,eAAe,IAAI,CAAC,CAAA;gDACrC,MAAM,OAAO,KAAK,UAAU,CAAC,IAAI,IAAI,CAAC;gDACtC,IAAI,CAAC,MAAM,OAAO;gDAClB,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,KAAK,EAAE,CAAC,EAAE,EAAE,YAAY,OAAO;gDACjE,IAAI,KAAK,IAAI,KAAK,eAAe,KAAK,SAAS,EAAE,CAAC,EAAE,EAAE,YAAY,OAAO;gDACzE,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,MAAM,KAAK,MAAM,OAAO;gDAC3D,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,MAAM,EAAE,OAAO;gDAClD,IAAI,KAAK,IAAI,KAAK,kBAAkB,KAAK,YAAY,EAAE,SAAS,GAAG,OAAO;gDAC1E,IAAI,KAAK,IAAI,KAAK,YAAY,OAAO;gDACrC,IAAI,KAAK,IAAI,KAAK,UAAU,KAAK,IAAI,EAAE,OAAO;gDAC9C,IAAI,KAAK,IAAI,KAAK,SAAS,KAAK,GAAG,EAAE,OAAO;gDAC5C,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,KAAK,EAAE,OAAO;gDAChD,IAAI,KAAK,IAAI,KAAK,kBAAkB,KAAK,YAAY,EAAE,OAAO;gDAC9D,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,MAAM,EAAE,SAAS,GAAG,OAAO;gDAC9D,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,KAAK,EAAE,SAAS,GAAG,OAAO;gDAC5D,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,MAAM,EAAE,OAAO;gDAClD,IAAI,KAAK,IAAI,KAAK,UAAU,OAAO;gDACnC,OAAO;4CACT;4CAEA,qBACE,6LAAC;gDAEC,SAAS,IAAM,aAAa,KAAK,EAAE;gDACnC,WAAW,CAAC,oCAAoC,EAAE,CAAC,aAAa,eAAe,IAAI;0DAElF,eAAe,GAAG,CAAC,CAAC;oDACnB,MAAM,WAAW,KAAK,UAAU,CAAC,OAAO,IAAI,CAAC;oDAC7C,MAAM,UAAU,CAAC,YACf,SAAS,IAAI,KAAK,WAAW,CAAC,SAAS,KAAK,EAAE,CAAC,EAAE,EAAE,cACnD,SAAS,IAAI,KAAK,eAAe,CAAC,SAAS,SAAS,EAAE,CAAC,EAAE,EAAE;oDAG7D,qBACE,6LAAC;wDAEC,WAAU;kEAEV,cAAA,6LAAC;4DAAI,WAAU;sEACZ,yBACC,6LAAC,kIAAA,CAAA,UAAgB;gEAAC,UAAU;;;;;qFAE5B,6LAAC;gEAAK,WAAU;0EAA+C;;;;;;;;;;;uDAP9D,OAAO,IAAI;;;;;gDAYtB;+CAzBK,KAAK,EAAE;;;;;wCA4BlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUd,6LAAC;gBAAI,WAAW,CAAC,eAAe,EAAE,eAAe,SAAS,IAAI;;kCAC5D,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAwB;;;;;;kDACtC,6LAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;kDAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAGjB,6LAAC;gCAAE,WAAU;0CAA8C;;;;;;;;;;;;kCAK7D,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,8JAAA,CAAA,aAAU;4BACT,SAAS;4BACT,oBAAoB,8JAAA,CAAA,gBAAa;4BACjC,WAAW;sCAEX,cAAA,6LAAC,sKAAA,CAAA,kBAAe;gCACd,OAAO,cAAc,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;gCAC1E,UAAU,sKAAA,CAAA,8BAA2B;0CAErC,cAAA,6LAAC;oCAAI,WAAU;8CACZ,cACE,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAChC,GAAG,CAAC,CAAC,uBACJ,6LAAC;4CAEC,QAAQ;4CACR,UAAU,IAAM,uBAAuB,OAAO,IAAI;2CAF7C,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAY/B,8BACC,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,gBAAgB;;;;;;0BAKnC,6LAAC,6HAAA,CAAA,UAAW;gBACV,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,SAAS,cAAc,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;gBACtC,OAAO;gBACP,SAAS;gBACT,aAAa;gBACb,gBAAgB;gBAChB,gBAAgB;;;;;;0BAIlB,6LAAC,2HAAA,CAAA,UAAS;gBACR,QAAQ;gBACR,SAAS,IAAM,YAAY;gBAC3B,SAAS,eAAe,GAAG,CAAC,CAAA,IAAK,CAAC;wBAChC,MAAM,EAAE,IAAI;wBACZ,MAAM,CAAA,GAAA,mHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,EAAE,IAAI;oBACxC,CAAC;gBACD,OAAO;gBACP,aAAa;gBACb,QAAQ;;;;;;;;;;;;AAIhB;IAxkBwB;;QAcN,8JAAA,CAAA,aAAU;;;MAdJ;AA0kBxB,SAAS,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAkD;;IACtF,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACX,GAAG,CAAA,GAAA,sKAAA,CAAA,cAAW,AAAD,EAAE;QAAE,IAAI,OAAO,IAAI;IAAC;IAElC,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC;QACA,SAAS,aAAa,MAAM;IAC9B;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,OAAO;QACP,WAAU;;0BAEV,6LAAC;gBACE,GAAG,UAAU;gBACb,GAAG,SAAS;gBACb,WAAU;0BAEV,cAAA,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;;;;;;0BAG1B,6LAAC;gBAAM,WAAU;;kCACf,6LAAC;wBACC,MAAK;wBACL,SAAS,OAAO,OAAO;wBACvB,UAAU;wBACV,WAAU;;;;;;kCAEZ,6LAAC;wBAAK,WAAU;kCAAuB,OAAO,IAAI;;;;;;;;;;;;YAGnD,OAAO,OAAO,iBACb,6LAAC,mMAAA,CAAA,MAAG;gBAAC,WAAU;;;;;qCAEf,6LAAC,6MAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;AAI1B;IA/CS;;QAQH,sKAAA,CAAA,cAAW;;;MARR","debugId":null}},
    {"offset": {"line": 4321, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/BlockRenderer.tsx"],"sourcesContent":["'use client';\n\ninterface BlockRendererProps {\n  block: any;\n}\n\nexport default function BlockRenderer({ block }: BlockRendererProps) {\n  const renderRichText = (richTextArray: any[]) => {\n    if (!richTextArray || richTextArray.length === 0) return null;\n    \n    return richTextArray.map((text, index) => {\n      const { annotations } = text;\n      let element = <span key={index}>{text.plain_text}</span>;\n      \n      if (annotations.bold) element = <strong key={index}>{text.plain_text}</strong>;\n      if (annotations.italic) element = <em key={index}>{text.plain_text}</em>;\n      if (annotations.strikethrough) element = <del key={index}>{text.plain_text}</del>;\n      if (annotations.underline) element = <u key={index}>{text.plain_text}</u>;\n      if (annotations.code) element = <code key={index} className=\"bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded\">{text.plain_text}</code>;\n      \n      if (text.href) {\n        element = (\n          <a key={index} href={text.href} target=\"_blank\" rel=\"noopener noreferrer\" \n             className=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300\">\n            {element}\n          </a>\n        );\n      }\n      \n      return element;\n    });\n  };\n\n  switch (block.type) {\n    case 'paragraph':\n      return (\n        <p className=\"leading-7 min-h-[1.5rem]\">\n          {renderRichText(block.paragraph.rich_text)}\n        </p>\n      );\n    \n    case 'heading_1':\n      return (\n        <h1 className=\"text-3xl font-semibold mt-8 mb-2 text-gray-900 dark:text-white\">\n          {renderRichText(block.heading_1.rich_text)}\n        </h1>\n      );\n    \n    case 'heading_2':\n      return (\n        <h2 className=\"text-2xl font-semibold mt-6 mb-2 text-gray-900 dark:text-white\">\n          {renderRichText(block.heading_2.rich_text)}\n        </h2>\n      );\n    \n    case 'heading_3':\n      return (\n        <h3 className=\"text-xl font-semibold mt-4 mb-1 text-gray-900 dark:text-white\">\n          {renderRichText(block.heading_3.rich_text)}\n        </h3>\n      );\n    \n    case 'bulleted_list_item':\n      return (\n        <li className=\"ml-6 list-disc leading-7\">\n          {renderRichText(block.bulleted_list_item.rich_text)}\n        </li>\n      );\n    \n    case 'numbered_list_item':\n      return (\n        <li className=\"ml-6 list-decimal leading-7\">\n          {renderRichText(block.numbered_list_item.rich_text)}\n        </li>\n      );\n    \n    case 'to_do':\n      return (\n        <div className=\"flex items-start gap-2\">\n          <input\n            type=\"checkbox\"\n            checked={block.to_do.checked}\n            disabled\n            className=\"mt-1 h-4 w-4 rounded border-gray-300\"\n          />\n          <span className={`leading-7 ${block.to_do.checked ? 'line-through text-gray-500' : ''}`}>\n            {renderRichText(block.to_do.rich_text)}\n          </span>\n        </div>\n      );\n    \n    case 'toggle':\n      return (\n        <details className=\"mb-2\">\n          <summary className=\"cursor-pointer font-medium\">\n            {renderRichText(block.toggle.rich_text)}\n          </summary>\n        </details>\n      );\n    \n    case 'code':\n      return (\n        <pre className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-md my-2 overflow-x-auto\">\n          <code className=\"text-sm font-mono\">\n            {block.code.rich_text[0]?.plain_text || ''}\n          </code>\n        </pre>\n      );\n    \n    case 'quote':\n      return (\n        <blockquote className=\"border-l-3 border-gray-800 dark:border-gray-200 pl-4 my-2\">\n          {renderRichText(block.quote.rich_text)}\n        </blockquote>\n      );\n    \n    case 'divider':\n      return <hr className=\"my-4 border-t border-gray-300 dark:border-gray-700\" />;\n    \n    case 'image':\n      const imageUrl = block.image.type === 'external' \n        ? block.image.external.url \n        : block.image.file?.url;\n      \n      return imageUrl ? (\n        <img\n          src={imageUrl}\n          alt={block.image.caption?.[0]?.plain_text || 'Image'}\n          className=\"max-w-full h-auto rounded-lg mb-4\"\n        />\n      ) : null;\n    \n    case 'video':\n      const videoUrl = block.video.type === 'external' \n        ? block.video.external.url \n        : block.video.file?.url;\n      \n      return videoUrl ? (\n        <div className=\"mb-4\">\n          <video controls className=\"max-w-full h-auto rounded-lg\">\n            <source src={videoUrl} />\n            Your browser does not support the video tag.\n          </video>\n        </div>\n      ) : null;\n    \n    case 'file':\n      const fileUrl = block.file.type === 'external' \n        ? block.file.external.url \n        : block.file.file?.url;\n      \n      return fileUrl ? (\n        <a\n          href={fileUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300 mb-4\"\n        >\n          📎 {block.file.caption?.[0]?.plain_text || 'Download file'}\n        </a>\n      ) : null;\n    \n    case 'bookmark':\n      return (\n        <a\n          href={block.bookmark.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"block p-4 border border-gray-200 dark:border-gray-700 rounded-lg mb-4 hover:border-indigo-500 dark:hover:border-indigo-400\"\n        >\n          <p className=\"text-indigo-600 dark:text-indigo-400\">{block.bookmark.url}</p>\n          {block.bookmark.caption?.[0] && (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              {block.bookmark.caption[0].plain_text}\n            </p>\n          )}\n        </a>\n      );\n    \n    case 'table_of_contents':\n      return (\n        <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg mb-4\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Table of Contents</p>\n        </div>\n      );\n    \n    case 'child_database':\n      return (\n        <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg mb-4\">\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            📊 {block.child_database.title || 'Embedded Database'}\n          </p>\n        </div>\n      );\n    \n    case 'child_page':\n      return (\n        <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg mb-4\">\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            📄 {block.child_page.title || 'Subpage'}\n          </p>\n        </div>\n      );\n    \n    default:\n      return (\n        <div className=\"p-4 bg-gray-100 dark:bg-gray-800 rounded mb-4\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Unsupported block type: {block.type}\n          </p>\n        </div>\n      );\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4693, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/components/PageView.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { notionService } from '@/lib/notion';\nimport { ArrowLeft, Loader2, LogOut } from 'lucide-react';\nimport BlockRenderer from './BlockRenderer';\nimport PropertyRenderer from './PropertyRenderer';\n\ninterface PageViewProps {\n  pageId: string;\n  onBack: () => void;\n  onLogout: () => void;\n}\n\nexport default function PageView({ pageId, onBack, onLogout }: PageViewProps) {\n  const [page, setPage] = useState<any>(null);\n  const [blocks, setBlocks] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    loadPageData();\n  }, [pageId]);\n\n  const loadPageData = async () => {\n    try {\n      setLoading(true);\n      const [pageData, pageBlocks] = await Promise.all([\n        notionService.getPage(pageId),\n        notionService.getBlocks(pageId)\n      ]);\n      setPage(pageData);\n      setBlocks(pageBlocks);\n    } catch (err) {\n      setError('Failed to load page.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white dark:bg-gray-900\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-gray-400\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white dark:bg-gray-900\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getPageTitle = () => {\n    if (!page?.properties) return 'Untitled';\n    const titleProp = Object.values(page.properties).find((prop: any) => prop.type === 'title') as any;\n    return titleProp?.title?.[0]?.plain_text || 'Untitled';\n  };\n\n  const getPageIcon = () => {\n    if (page?.icon?.type === 'emoji') return page.icon.emoji;\n    return null;\n  };\n\n  const getCoverUrl = () => {\n    if (page?.cover?.type === 'external') return page.cover.external.url;\n    if (page?.cover?.type === 'file') return page.cover.file.url;\n    return null;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n      {/* Cover Image */}\n      {getCoverUrl() && (\n        <div className=\"relative h-60 w-full\">\n          <img \n            src={getCoverUrl()} \n            alt=\"Page cover\" \n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-b from-transparent to-black/10\" />\n        </div>\n      )}\n\n      <div className=\"notion-page py-8\">\n        <div className=\"mb-6 flex items-center justify-between\">\n          <button\n            onClick={onBack}\n            className=\"inline-flex items-center text-sm text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back to database\n          </button>\n          <button\n            onClick={onLogout}\n            className=\"button-secondary px-4 py-2 inline-flex items-center gap-2\"\n          >\n            <LogOut className=\"h-4 w-4\" />\n            Logout\n          </button>\n        </div>\n\n        <article className=\"pb-12\">\n          {/* Page Title with Icon */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center gap-4 mb-8\">\n              {getPageIcon() && (\n                <span className=\"text-5xl\">{getPageIcon()}</span>\n              )}\n              <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                {getPageTitle()}\n              </h1>\n            </div>\n\n            {/* Page Properties */}\n            {page?.properties && Object.keys(page.properties).length > 1 && (\n              <div className=\"bg-gray-50 dark:bg-gray-900/50 rounded-lg p-6 mb-8\">\n                <div className=\"grid gap-4\">\n                  {Object.entries(page.properties)\n                    .filter(([_, prop]: [string, any]) => prop.type !== 'title')\n                    .filter(([_, prop]: [string, any]) => {\n                      // Filter out empty properties\n                      if (prop.type === 'rich_text' && (!prop.rich_text || prop.rich_text.length === 0)) return false;\n                      if (prop.type === 'number' && prop.number === null) return false;\n                      if (prop.type === 'select' && !prop.select) return false;\n                      if (prop.type === 'multi_select' && (!prop.multi_select || prop.multi_select.length === 0)) return false;\n                      if (prop.type === 'date' && !prop.date) return false;\n                      if (prop.type === 'people' && (!prop.people || prop.people.length === 0)) return false;\n                      if (prop.type === 'files' && (!prop.files || prop.files.length === 0)) return false;\n                      if (prop.type === 'url' && !prop.url) return false;\n                      if (prop.type === 'email' && !prop.email) return false;\n                      if (prop.type === 'phone_number' && !prop.phone_number) return false;\n                      return true;\n                    })\n                    .map(([key, property]: [string, any]) => (\n                      <div key={key} className=\"flex items-start gap-4\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400 min-w-[140px]\">\n                          {key}\n                        </span>\n                        <div className=\"flex-1\">\n                          <PropertyRenderer property={property} />\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Page Content */}\n          <div className=\"notion-content space-y-2\">\n            {blocks.map((block) => (\n              <BlockRenderer key={block.id} block={block} />\n            ))}\n          </div>\n        </article>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5012, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { notionService } from '@/lib/notion';\nimport ApiKeyInput from '@/components/ApiKeyInput';\nimport DatabaseSelector from '@/components/DatabaseSelector';\nimport DatabaseView from '@/components/DatabaseView';\nimport PageView from '@/components/PageView';\n\nconst STORAGE_KEY = 'notion_api_key';\n\nexport default function Home() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [selectedDatabase, setSelectedDatabase] = useState<string | null>(null);\n  const [selectedPage, setSelectedPage] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored API key on mount\n    const storedKey = localStorage.getItem(STORAGE_KEY);\n    if (storedKey) {\n      notionService.initialize(storedKey);\n      setIsAuthenticated(true);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const handleApiKeySubmit = (key: string, remember: boolean) => {\n    notionService.initialize(key);\n    if (remember) {\n      localStorage.setItem(STORAGE_KEY, key);\n    }\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(STORAGE_KEY);\n    setIsAuthenticated(false);\n    setSelectedDatabase(null);\n    setSelectedPage(null);\n  };\n\n  const handlePageSelect = (pageId: string) => {\n    setSelectedPage(pageId);\n  };\n\n  const handleBackToDatabase = () => {\n    setSelectedPage(null);\n  };\n\n  const handleBackToDatabases = () => {\n    setSelectedDatabase(null);\n    setSelectedPage(null);\n  };\n\n  if (isLoading) {\n    return null; // Prevent flash of login screen\n  }\n\n  if (!isAuthenticated) {\n    return <ApiKeyInput onSubmit={handleApiKeySubmit} />;\n  }\n\n  if (selectedPage) {\n    return (\n      <PageView \n        pageId={selectedPage} \n        onBack={handleBackToDatabase}\n        onLogout={handleLogout}\n      />\n    );\n  }\n\n  if (selectedDatabase) {\n    return (\n      <DatabaseView \n        databaseId={selectedDatabase} \n        onPageSelect={handlePageSelect}\n        onBack={handleBackToDatabases}\n        onLogout={handleLogout}\n      />\n    );\n  }\n\n  return <DatabaseSelector onSelect={setSelectedDatabase} onLogout={handleLogout} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASA,MAAM,cAAc;AAEL,SAAS;;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,oCAAoC;YACpC,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,gHAAA,CAAA,gBAAa,CAAC,UAAU,CAAC;gBACzB,mBAAmB;YACrB;YACA,aAAa;QACf;yBAAG,EAAE;IAEL,MAAM,qBAAqB,CAAC,KAAa;QACvC,gHAAA,CAAA,gBAAa,CAAC,UAAU,CAAC;QACzB,IAAI,UAAU;YACZ,aAAa,OAAO,CAAC,aAAa;QACpC;QACA,mBAAmB;IACrB;IAEA,MAAM,eAAe;QACnB,aAAa,UAAU,CAAC;QACxB,mBAAmB;QACnB,oBAAoB;QACpB,gBAAgB;IAClB;IAEA,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,MAAM,uBAAuB;QAC3B,gBAAgB;IAClB;IAEA,MAAM,wBAAwB;QAC5B,oBAAoB;QACpB,gBAAgB;IAClB;IAEA,IAAI,WAAW;QACb,OAAO,MAAM,gCAAgC;IAC/C;IAEA,IAAI,CAAC,iBAAiB;QACpB,qBAAO,6LAAC,6HAAA,CAAA,UAAW;YAAC,UAAU;;;;;;IAChC;IAEA,IAAI,cAAc;QAChB,qBACE,6LAAC,0HAAA,CAAA,UAAQ;YACP,QAAQ;YACR,QAAQ;YACR,UAAU;;;;;;IAGhB;IAEA,IAAI,kBAAkB;QACpB,qBACE,6LAAC,8HAAA,CAAA,UAAY;YACX,YAAY;YACZ,cAAc;YACd,QAAQ;YACR,UAAU;;;;;;IAGhB;IAEA,qBAAO,6LAAC,kIAAA,CAAA,UAAgB;QAAC,UAAU;QAAqB,UAAU;;;;;;AACpE;GA1EwB;KAAA","debugId":null}}]
}