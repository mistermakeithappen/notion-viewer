{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/app/api/notion/databases/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { Client } from '@notionhq/client';\n\nexport async function GET(request: Request) {\n  const authHeader = request.headers.get('authorization');\n  \n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return NextResponse.json({ error: 'Missing authorization token' }, { status: 401 });\n  }\n\n  const token = authHeader.substring(7);\n  const notion = new Client({ auth: token });\n\n  try {\n    const response = await notion.search({\n      filter: {\n        value: 'database',\n        property: 'object',\n      },\n      sort: {\n        direction: 'descending',\n        timestamp: 'last_edited_time',\n      },\n    });\n\n    return NextResponse.json(response.results);\n  } catch (error: any) {\n    console.error('Notion API error:', error);\n    return NextResponse.json({ \n      error: 'Failed to fetch databases',\n      details: error.message || 'Unknown error',\n      code: error.code\n    }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEvC,IAAI,CAAC,cAAc,CAAC,WAAW,UAAU,CAAC,YAAY;QACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA8B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,MAAM,QAAQ,WAAW,SAAS,CAAC;IACnC,MAAM,SAAS,IAAI,+JAAA,CAAA,SAAM,CAAC;QAAE,MAAM;IAAM;IAExC,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,MAAM,CAAC;YACnC,QAAQ;gBACN,OAAO;gBACP,UAAU;YACZ;YACA,MAAM;gBACJ,WAAW;gBACX,WAAW;YACb;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,OAAO;IAC3C,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,SAAS,MAAM,OAAO,IAAI;YAC1B,MAAM,MAAM,IAAI;QAClB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}