{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonburgan/Documents/Cursor%20Projects/Claud%20Opus%204/notion-viewer/app/api/notion/databases/%5Bid%5D/query/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { Client } from '@notionhq/client';\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  const authHeader = request.headers.get('authorization');\n  \n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return NextResponse.json({ error: 'Missing authorization token' }, { status: 401 });\n  }\n\n  const token = authHeader.substring(7);\n  const notion = new Client({ auth: token });\n\n  try {\n    const response = await notion.databases.query({\n      database_id: params.id,\n    });\n\n    return NextResponse.json(response.results);\n  } catch (error) {\n    console.error('Notion API error:', error);\n    return NextResponse.json({ error: 'Failed to query database' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEvC,IAAI,CAAC,cAAc,CAAC,WAAW,UAAU,CAAC,YAAY;QACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA8B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,MAAM,QAAQ,WAAW,SAAS,CAAC;IACnC,MAAM,SAAS,IAAI,+JAAA,CAAA,SAAM,CAAC;QAAE,MAAM;IAAM;IAExC,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,SAAS,CAAC,KAAK,CAAC;YAC5C,aAAa,OAAO,EAAE;QACxB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,OAAO;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}